{"version":3,"sources":["lib/FontAwesome.ts","components/contexts/ProductContext.ts","components/hooks/useCart.ts","components/contexts/OrderContext.ts","lib/utils.ts","lib/api.ts","components/admin/hooks/useSaveState.ts","components/common/Navigation.tsx","components/shop/CategoryBadges.tsx","components/shop/ProductCard.tsx","components/common/CartItem.tsx","components/shop/CartItems.tsx","components/common/ModalDialogue.tsx","components/shop/Cart.tsx","components/shop/ProductsPage.tsx","components/common/NotFound.tsx","components/common/SelectCompany.tsx","components/shop/TogglePayMethod.tsx","components/shop/CheckoutForm.tsx","components/shop/Checkout.tsx","components/common/OrderRows.tsx","components/shop/Confirmation.tsx","components/common/Loading.tsx","components/shop/SearchHits.tsx","components/common/Footer.tsx","components/contexts/AdminContext.ts","components/admin/SelectOrderStatus.tsx","components/admin/PaymentIcon.tsx","components/admin/Order.tsx","components/admin/ToggleStatusFilter.tsx","components/admin/OrderList.tsx","components/admin/OrderAdmin.tsx","components/App.tsx","components/hooks/useProducts.ts","components/hooks/useVideo.ts","index.tsx"],"names":["library","add","faShoppingCart","faAngleUp","faAngleLeft","faAngleRight","faPlusCircle","faMinusCircle","faSpinner","faSearch","faTimes","faTrashAlt","faCcVisa","faCcMastercard","faCcAmex","faCheck","CartAction","NEWS_CATEGORY","id","name","ProductContext","createContext","categories","products","news","NUMBER_OF_ITEMS_IN_NEWS","companies","emptyCart","items","Map","articles","subTotal","blink","open","modal","caption","labelConfirm","labelCancel","show","emptyOrder","companyId","created","createdBy","paymentMethod","totalPrice","status","errorMessage","cart","OrderContext","dispatch","APP_INFO","packageJSON","version","homepage","root","slice","lastIndexOf","getCurrencyFormat","number","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","getOrderIdFormat","String","replace","apiClient","axios","create","baseURL","responseType","headers","get","slug","a","cache","response","data","length","localStorage","setItem","JSON","stringify","getItem","parse","save","input","put","post","del","delete","fetchBLOB","url","client","SaveState","useCart","useState","setCart","useEffect","setTimeout","size","forEach","quantity","product","push","_cart","cartString","itemsString","storedCart","itemsArray","map","values","productId","find","p","filter","item","initialCart","resetCart","removeItem","action","payload","newCart","currentQuantity","RESET","TOGGLE","HIDE_MODAL","ADD","newCartItems","DELETE","set","entries","price","getTotals","Navigation","clearSearch","setClearSearch","useContext","history","useHistory","inputRef","useRef","toggleRef","hideSearch","useCallback","noDelay","current","value","checked","className","category","to","key","ref","type","onChange","focus","placeholder","aria-label","e","encodeURIComponent","target","htmlFor","icon","CategoryBadges","result","productCategory","pc","categoryId","c","ProductCard","alt","src","imageUrl","description","onClick","CartItem","editable","updateParams","openClass","parseInt","inputMode","pattern","disabled","CartItems","onChangeItem","params","undefined","UPDATE","ModalDialogue","props","onConfirm","onCancel","Modal","onHide","centered","Header","closeButton","Title","Body","Button","variant","Cart","atCheckout","cartRef","scrollIntoView","behavior","classOpen","Thumbnails","Footer","ProductsPage","useParams","currentCategory","previousSlug","usePrevious","window","scrollTo","Row","xs","sm","md","lg","xl","cat","Col","NotFound","video","hasButton","autoPlay","loop","muted","playsInline","poster","goBack","SelectCompany","selected","errors","Form","Group","controlId","Label","Control","as","custom","defaultValue","isInvalid","company","Feedback","PAY_METHODS","TogglePayMethod","order","setOrder","setErrors","ToggleButtonGroup","method","ToggleButton","CheckoutForm","isValidEmail","isSaving","onSubmit","handleChange","noValidate","isValid","pulse","Checkout","setSaving","isValidForm","err","Object","keys","match","submitOrder","createdOrder","console","log","messages","error","msg","join","message","statusText","savedOrder","getOrderRows","_order","orderRow","orderId","amount","preventDefault","newOrder","Date","toISOString","orderRows","OrderRows","Confirmation","setError","counter","validateOrder","toLocaleString","Loading","NO_MOVIES","year","added","SearchHits","foundProducts","setFoundProducts","loading","setLoading","time","slugslug","slugify","lower","Array","from","Set","indexOf","timeEnd","setProducts","process","orderStatusArray","orderStatusColors","saveOrder","Promise","deleteOrder","AdminContext","statusFilter","setStatusFilter","statusMatches","setStatusMatches","changeOrderStatus","updateItem","SelectOrderStatus","statusColor","color","backgroundColor","index","PaymentIcon","i","toLowerCase","Order","setOpenClass","selectedStatus","setSelectedStatus","isDirty","setDirty","isSaved","setSaved","isDeleting","setDeleting","isDeleted","setDeleted","state","DIRTY","SAVING","SAVED","DELETING","useSaveState","setSaveState","onChangeStatus","toggleOpen","includes","onDelete","toLocaleDateString","ToggleStatusFilter","changeStatusFilter","reduce","b","OrderList","orders","matches","OrderAdmin","companyOrders","setCompanyOrders","currentCompany","currentCompanyId","API","sort","x","y","setOrdersAsync","updateOrder","updatedOrders","o","concat","filteredOrders","getTotalPrice","toOrderRows","Provider","selectedCompanyId","selectedCompany","_slug","App","setCategories","unshift","setCategoriesAsync","_products","populateNewsCategory","setProductsAsync","useProducts","setVideo","blob","URL","createObjectURL","preloadVideo","useVideo","Container","fluid","path","exact","ReactDOM","render","basename","document","getElementById"],"mappings":"gjDAqBAA,IAAQC,IACNC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KCjCK,ICGKC,EDHCC,EAAiC,CAAEC,IAAK,EAAGC,KAAM,eASjDC,EAAiBC,wBAA+B,CAC3DC,WAAY,GACZC,SAAU,GACVC,KAAM,CAAEP,gBAAeQ,wBAXc,K,OEA1BC,EAAuB,CAClC,CAAER,GAAI,EAAGC,KAAM,IACf,CAAED,GAAI,KAAMC,KAAM,SAClB,CAAED,GAAI,KAAMC,KAAM,SAClB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,KAAMC,KAAM,QAGPQ,EAAkB,CAC7BC,MAAO,IAAIC,IACXC,SAAU,EACVC,SAAU,EACVC,OAAO,EACPC,MAAM,EACNC,MAAO,CACLC,QAAS,eACTC,aAAc,SACdC,YAAa,SACbC,MAAM,IAIGC,EAAoB,CAC/BC,UAAW,EACXC,QAAS,GACTC,UAAW,GACXC,cAAe,GACfC,WAAY,EACZC,OAAQ,GAMGC,EACA,6CADAA,EAEA,yBAFAA,EAGI,gCAUXC,EAAI,eAAQpB,GAGLqB,EAAe3B,wBAA6B,CACvDK,YACAqB,OACAE,SAL6B,aAM7BV,e,iDCvDWW,EAAW,CACtB/B,KAAMgC,EAAYhC,KAClBiC,QAASD,EAAYC,QACrBC,SAAUF,EAAYE,SACtBC,KAAMH,EAAYE,SAASE,MAAMJ,EAAYE,SAASG,YAAY,OAGvDC,EAAgD,SAACC,GAAD,OAC3D,IAAIC,KAAKC,aAAa,QAAS,CAC7BC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOP,IAECQ,EAEC,SAAAR,GAAM,OAAIS,OAAOT,GAAQU,QAAQ,oBAAqB,QChB9DC,EAA2BC,IAAMC,OAAO,CAC5CC,QAAS,2DACTC,aAAc,OACdC,QAAS,CAAE,eAAgB,sBAGhBC,EAAG,uCAAG,WACjBC,GADiB,iCAAAC,EAAA,6DAEjBC,EAFiB,kDAKQT,EAAUM,IAAV,WAAuBC,IAL/B,cAKTG,EALS,QAMTC,EAAOD,EAASC,OACVA,EAAKC,QAAUH,GACzBI,aAAaC,QAAb,UAAwBjC,EAAS/B,KAAjC,YAAyCyD,GAAQQ,KAAKC,UAAUL,IARnD,kBASRA,GATQ,uCAWTA,EAAOE,aAAaI,QAAb,UAAwBpC,EAAS/B,KAAjC,YAAyCyD,OAC1CI,EAAKC,OAZF,0CAYiBG,KAAKG,MAAMP,IAZ5B,YAaX,OAAO,KAAID,SAbA,0CAaiB,KAAIA,SAASC,MAb9B,6EAAH,sDAkBHQ,EAAI,uCAAG,WAClBC,EACAb,EACA1D,GAHkB,iBAAA2D,EAAA,mEAMZ3D,EANY,gCAOSmD,EAAUqB,IAAV,WAAqBd,EAArB,YAA6B1D,GAAMuE,GAP5C,cAORV,EAPQ,yBAQP,CAAElC,OAAQkC,EAASlC,OAAQmC,KAAMD,EAASC,OARnC,wBAUSX,EAAUsB,KAAV,WAAsBf,GAAQa,GAVvC,eAURV,EAVQ,yBAWP,CAAElC,OAAQkC,EAASlC,OAAQmC,KAAMD,EAASC,OAXnC,8DAcZ,OAAO,KAAID,SAdC,0CAcgB,KAAIA,UAdpB,6EAAH,0DAmBJa,EAAG,uCAAG,WAAOhB,EAAc1D,GAArB,eAAA2D,EAAA,+EAEQR,EAAUwB,OAAV,WAAqBjB,EAArB,YAA6B1D,GAAM,CACxD8D,KAAM,CAAE9D,QAHK,cAET6D,EAFS,yBAKRA,GALQ,oCAOX,OAAO,KAAIA,SAPA,0CAOiB,KAAIA,UAPrB,4EAAH,wDAYHe,EAAS,uCAAG,WAAOC,GAAP,iBAAAlB,EAAA,6DACjBmB,EAAwB1B,IAAMC,OAAO,CACzCE,aAAc,OACdC,QAAS,CAAE,eAAgB,sBAHN,kBAOEsB,EAAOrB,IAAIoB,GAPb,cAOfhB,EAPe,yBAQdA,EAASC,MARK,oCAUjB,OAAO,KAAID,SAVM,0CAUW,KAAIA,SAASC,MAVxB,4EAAH,sD,0BHrDVhE,O,aAAAA,I,mBAAAA,I,mBAAAA,I,iBAAAA,I,mBAAAA,I,4BAAAA,M,KAoBL,IIvBKiF,EJuBCC,EAAmB,SAAC3E,GAAyB,IAAD,EAC/B4E,mBAAexE,GADgB,mBAChDoB,EADgD,KAC1CqD,EAD0C,KAGvDC,qBAAU,WAIR,GAHItD,EAAKf,OACPsE,YAAW,kBAAMF,EAAQ,eAAKrD,EAAN,CAAYf,OAAO,OAAU,KAEnDe,EAAKnB,MAAM2E,KAAM,CACnBrB,aAAaC,QAAb,UAAwBjC,EAAS/B,KAAjC,SAA8CiE,KAAKC,UAAUtC,IAC7D,IAAMnB,EAAoB,GAC1BmB,EAAKnB,MAAM4E,SACT,SAACC,EAAUC,GAAX,QAAyBA,GAAW9E,EAAM+E,KAAK,CAACD,EAAQxF,GAAIuF,OAE9DvB,aAAaC,QAAb,UAAwBjC,EAAS/B,KAAjC,UAA+CiE,KAAKC,UAAUzD,OAE/D,CAACmB,IAEJsD,qBAAU,WA6BJ9E,GAAYA,EAAS0D,QAAQmB,EA5BD,WAC9B,IAAIQ,EAAcjF,EAEZkF,EAAa3B,aAAaI,QAAb,UAAwBpC,EAAS/B,KAAjC,UACb2F,EAAc5B,aAAaI,QAAb,UAAwBpC,EAAS/B,KAAjC,WACpB,GACE0F,GACAA,EAAW5B,QACX6B,GACAA,EAAY7B,OACZ,CACA,IAAM8B,EAAgB,eAAQH,EAAR,GAAkBxB,KAAKG,MAAMsB,IAC7CG,EAAkC5B,KAAKG,MAAMuB,GAAaG,KAC9D,SAACC,GAAsB,IAAD,cACUA,EADV,GACbC,EADa,KACFV,EADE,KAEdC,EAAUnF,EAAS6F,MAAK,SAAAC,GAAC,OAAIA,EAAEnG,KAAOiG,KAC5C,OAAIT,EAAgB,CAACA,EAASD,QAEzB,KAGTM,EAAWnF,MAAQ,IAAIC,IACrBmF,EAAWM,QAAO,SAAAC,GAAI,QAAMA,MAE1BR,EAAWnF,MAAM2E,OAAMK,EAAQG,GAErC,OAAOH,EAEgCY,MACxC,CAACjG,IAEJ,IAWMkG,EAAY,WAChBrB,EAAQzE,GACRuD,aAAawC,WAAb,UAA2BxE,EAAS/B,KAApC,UACA+D,aAAawC,WAAb,UAA2BxE,EAAS/B,KAApC,YAyDF,MAAO,CAAC4B,EAtDQ,SACd4E,EACAC,GAEA,IAAMC,EAAO,eAAQ9E,GACf2D,EAAO,OAAGkB,QAAH,IAAGA,OAAH,EAAGA,EAASlB,QACrBD,GAAkB,OAAPmB,QAAO,IAAPA,OAAA,EAAAA,EAASnB,UAAT,OAAoBmB,QAApB,IAAoBA,OAApB,EAAoBA,EAASnB,SAAW,EACjDqB,EAAkBpB,EAAUmB,EAAQjG,MAAM+C,IAAI+B,GAAW,EAE/D,OAAQiB,GACN,KAAK3G,EAAW+G,MACdN,IACA,MACF,KAAKzG,EAAWgH,OACVjF,EAAKjB,UAAUsE,EAAQ,eAAKrD,EAAN,CAAYd,MAAOc,EAAKd,QAClD,MACF,KAAKjB,EAAWiH,WACdJ,EAAQ3F,MAAMI,MAAO,EACrB8D,EAAQ,eAAKyB,IACb,MACF,KAAK7G,EAAWkH,IACdzB,EAAWqB,EAAkBA,EAAkBrB,EAAWA,EAE5D,QAAQ,IAAR,EAEIkB,IAAW3G,EAAWkH,IAAM,EAAC,GAAM,GAAS,EAAEnF,EAAKd,KAAMc,EAAKd,MAFlE,mBACG4F,EAAQ7F,MADX,KACkB6F,EAAQ5F,KAD1B,KAGE,IACkC,EAD5BkG,EAAe,IAAItG,IAAIkB,EAAKnB,OAClC,GAAI+F,IAAW3G,EAAWoH,OACxBP,EAAQ3F,MAAMI,MAAO,GACrB,UAAIS,EAAKb,MAAMqF,YAAf,aAAI,EAAiBb,UACnByB,EAAatC,OAAO9C,EAAKb,MAAMqF,KAAKb,cAC7BA,IACQ,IAAbD,GACFoB,EAAQ3F,MAAMqF,KAAO,CACnBb,UACAD,SAAUqB,GAAoC,GAEhDD,EAAQ3F,MAAMI,MAAO,GACZmE,GC/FE,GD+FqBA,GC9FrB,ID+FX0B,EAAaE,IAAI3B,EAASD,IAG9B,GAAK0B,EAAa5B,KAEX,CAAC,IAAD,GAEH4B,GAFG,mBA7DK,SAACvG,GACjB,IADiD,EAC7CG,EAAW,EACXD,EAAW,EAFkC,cAGjBF,EAAM0G,WAHW,IAGjD,2BAAiD,CAAC,IAAD,yBAAvC5B,EAAuC,KAA9BD,EAA8B,KAE/C1E,GADc2E,EAAQ6B,MAAQ9B,EAE9B3E,GAAY2E,GANmC,8BAQjD,MAAO,CAAC1E,EAAUD,GAwDP0G,CAAUL,KAFdN,EAAQjG,MADJ,KACWiG,EAAQ9F,SADnB,KAC6B8F,EAAQ/F,SADrC,KAKLsE,EAAQ,eAAKyB,SANbJ,Q,OK9BKgB,EAnF+B,SAAC,GAGxC,IAFLC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEQrH,EAAesH,qBAAWxH,GAA1BE,WACFuH,EAAUC,cACVC,EAAWC,iBAAyB,MACpCC,EAAYD,iBAAyB,MAErCE,EAAaC,uBACjB,SAACC,GACMA,IAEDL,GAAYA,EAASM,SAAWN,EAASM,QAAQC,QACjDL,GACAA,EAAUI,UACTJ,EAAUI,QAAQE,SAAU,GALnBjD,YAAW,kBAAM4C,GAAW,KAAO,OAOnD,CAACH,EAAUE,IAGb5C,qBAAU,WACJqC,GAAeK,EAASM,UAC1BN,EAASM,QAAQC,MAAQ,GACzBJ,KAEFP,GAAe,KACd,CAACD,EAAaQ,EAAYP,IAY7B,OACE,yBAAKa,UAAU,qCACb,yBAAKA,UAAU,6CACZlI,EAAW2F,KAAI,SAAAwC,GACd,OACE,kBAAC,IAAD,CACED,UAAU,sCACVE,GAAE,WAAMD,EAAS7E,MACjB+E,IAAKF,EAASvI,IAEbuI,EAAStI,SAIhB,yBAAKqI,UAAU,YACb,2BACEI,IAAKX,EACLY,KAAK,WACL3I,GAAG,gBACH4I,SAvBU,WAAO,IAAD,KACxB,UAAIb,EAAUI,eAAd,aAAI,EAAmBE,WAAS,UAAAR,EAASM,eAAT,SAAkBU,YAwB5C,yBAAKP,UAAU,sCACb,yBAAKA,UAAU,UACb,2BACEI,IAAKb,EACLS,UAAU,eACVK,KAAK,SACLG,YAAY,SACZC,aAAW,SACXH,SAvCO,SAACI,GACpB,IAAMzE,EAAgB0E,mBAAmBD,EAAEE,OAAOd,OAC7C7D,EACAA,EAAMR,OAAS,GAAK4D,EAAQlC,KAAR,kBAAwBlB,IADrCyD,SAyCN,2BACEM,UAAU,oCACVa,QAAQ,iBAER,kBAAC,IAAD,CAAiBC,KAAK,gB,gBC/DnBC,EAxBkC,SAAC,GAAiB,IAAf7D,EAAc,EAAdA,QAC1CpF,EAAesH,qBAAWxH,GAA1BE,WAEJkJ,EAA+B,GAkBnC,OAjB0BlJ,EAAWgG,QACnC,SAAAmC,GAAQ,aACNA,EAASvI,GAAK,IAAd,UACAwF,EAAQ+D,uBADR,aACA,EAAyBrD,MAAK,SAAAsD,GAAE,OAAIA,EAAGC,aAAelB,EAASvI,UAGjD+F,KAAI,SAAA2D,GAAC,OACrBJ,EAAO7D,KACL,kBAAC,IAAD,CACEgD,IAAKiB,EAAE1J,GACPsI,UAAS,gEAA2DoB,EAAE1J,IACtEwI,GAAE,WAAMkB,EAAEhG,OAETgG,EAAEzJ,UAIF,oCAAGqJ,IC+BGK,EAhDiC,SAAC,GAAiB,IAAfnE,EAAc,EAAdA,QACzCzD,EAAa2F,qBAAW5F,GAAxBC,SACR,OACE,yBAAKuG,UAAU,UACb,yBAAKA,UAAU,4CACb,yBAAKA,UAAU,WACb,yBACEA,UAAU,yBACVsB,IAAKpE,EAAQvF,KACb4J,IAAKrE,EAAQsE,WAEf,yBAAKxB,UAAU,oBACb,yBAAKA,UAAU,UACb,6BACE,yBACEA,UAAU,8BACVsB,IAAKpE,EAAQvF,KACb4J,IAAKrE,EAAQsE,YAGjB,6BACE,wBAAIxB,UAAU,oBAAoB9C,EAAQvF,MAC1C,2BAAIuF,EAAQuE,iBAKpB,yBAAKzB,UAAU,4BACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAgB9C,QAASA,KAE3B,yBAAK8C,UAAU,kEACb,yBAAKA,UAAU,iCACZ/F,EAAkBiD,EAAQ6B,QAE7B,4BACEiB,UAAU,kBACV0B,QAAS,kBAAMjI,EAASjC,EAAWkH,IAAK,CAAExB,UAASD,SAAU,MAF/D,oBC6DG0E,EAhG2B,SAAC,GAMpC,IALL5D,EAKI,EALJA,KACA6D,EAII,EAJJA,SACAtB,EAGI,EAHJA,SACAuB,EAEI,EAFJA,aACAC,EACI,EADJA,UAEA,OACE,oCACE,wBACE9B,UAAS,mEAA8D8B,IAEvE,yBAAK9B,UAAU,QACb,yBACEA,UAAU,YACVuB,IAAKxD,EAAKb,QAAQsE,SAClBF,IAAKvD,EAAKb,QAAQvF,QAGtB,yBAAKqI,UAAU,0CACb,yBAAKA,UAAU,QAAQjC,EAAKb,QAAQvF,MACpC,yBAAKqI,UAAU,qDACb,yBACEA,UAAW4B,EAAW,sCAAwC,IAE9D,yBAAK5B,UAAU,mDACX4B,GACA,yBACE5B,UAAU,sBACV0B,QAAS,SAAAhB,GAAC,OACRJ,EAASI,EAAD,eACHmB,EADG,CAEN9D,OACAd,SAAUc,EAAKd,SAAW,OAI9B,kBAAC,IAAD,CAAiB6D,KAAK,mBAEpB,2BAAOd,UAAU,gBAAjB,SACN,yBAAKA,UAAU,oBACb,2BACEM,SAAU,SAACI,GAAD,OACRA,EAAEE,OAAOd,OACTQ,EAASI,EAAD,eACHmB,EADG,CAEN9D,OACAd,SAAU8E,SAASrB,EAAEE,OAAOd,WAGhCkC,UAAU,UACVC,QAAQ,SACR5B,KAAK,OACL1I,KAAK,WACLmI,MAAO/B,EAAKd,SACZiF,UAAWN,KAGdA,GACC,yBACE5B,UAAU,sBACV0B,QAAS,SAAAhB,GAAC,OACRJ,EAASI,EAAD,eACHmB,EADG,CAEN9D,OACAd,SAAUc,EAAKd,SAAW,OAI9B,kBAAC,IAAD,CAAiB6D,KAAK,mBAK9B,yBAAKd,UAAW4B,EAAW,kBAAoB,cAC5C3H,EAAkB8D,EAAKb,QAAQ6B,MAAQhB,EAAKd,WAE9C2E,GACC,yBAAK5B,UAAU,QACb,yBACEA,UAAU,qBACV0B,QAAS,SAAAhB,GAAC,OACRJ,EAASI,EAAD,eAASmB,EAAT,CAAuB9D,OAAMd,SAAU,OAGjD,kBAAC,IAAD,CAAiB6D,KAAM,CAAC,MAAO,aAAc/D,KAAK,cC7DrDoF,GAzB6B,SAAC,GAAmB,IAAD,EAAhBL,EAAgB,EAAhBA,UAAgB,EAClC1C,qBAAW5F,GAA9BD,EADqD,EACrDA,KAAME,EAD+C,EAC/CA,SAER2I,EAA6B,SAAC1B,EAAG2B,GAAY,IACzCtE,EAAmBsE,EAAnBtE,KAAMd,EAAaoF,EAAbpF,SACVc,QAAqBuE,IAAbrF,GACVxD,EAASjC,EAAW+K,OAAQ,CAAErF,QAASa,EAAKb,QAASD,cAGnD+D,EAAS,GAT8C,cAU7BzH,EAAKnB,MAAM0G,WAVkB,IAU7D,2BAAsD,CAAC,IAAD,yBAA5C5B,EAA4C,KAAnCD,EAAmC,KACpD+D,EAAO7D,KACL,kBAAC,EAAD,CACEgD,IAAKjD,EAAQxF,GACbqG,KAAM,CAAEb,UAASD,YACjB2E,UAAU,EACVtB,SAAU8B,EACVP,aAAc,GACdC,UAAWA,MAlB4C,8BAsB7D,OAAO,oCAAGd,I,kBCgBGwB,GArCqC,SAAC,GAI9C,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAEA,OACE,kBAACC,GAAA,EAAD,CAAO9J,KAAM2J,EAAM3J,KAAM+J,OAAQF,EAAUG,UAAQ,GACjD,kBAACF,GAAA,EAAMG,OAAP,CAAcC,aAAW,EAAChD,UAAU,iBAClC,kBAAC4C,GAAA,EAAMK,MAAP,KAAcR,EAAM9J,UAEtB,kBAACiK,GAAA,EAAMM,KAAP,CAAYlD,UAAU,QACpB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cACXyC,EAAM1E,MACL,kBAAC,EAAD,CACEA,KAAM0E,EAAM1E,KACZ6D,UAAU,EACVtB,SAAU,aACVuB,aAAc,GACdC,UAAU,WAKlB,yBAAK9B,UAAU,iDACb,kBAACmD,GAAA,EAAD,CAAQC,QAAQ,eAAe1B,QAASiB,GACrCF,EAAM5J,aAET,kBAACsK,GAAA,EAAD,CAAQC,QAAQ,SAAS1B,QAASgB,EAAW1C,UAAU,QACpDyC,EAAM7J,kBC+GJyK,GArImB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACzBlE,qBAAW5F,GAA9BD,EAD4C,EAC5CA,KAAME,EADsC,EACtCA,SACR8J,EAAU/D,iBAAuB,MAOvC3C,qBALqB,WACftD,EAAKd,MAAQ8K,GAAWA,EAAQ1D,SAClC0D,EAAQ1D,QAAQ2D,eAAe,CAAEC,SAAU,aAGvB,CAAClK,EAAKd,OAE9B,IAAMiL,EAAY,WAChB,OAAOnK,EAAKd,MAAQ6K,EAAa,OAAS,IAiBtCK,EAAuB,WAC3B,IADiC,EAC3B3C,EAAS,GADkB,cAEDzH,EAAKnB,MAAM0G,WAFV,IAEjC,2BAAsD,CAAC,IAAD,yBAA5C5B,EAA4C,KAAnCD,EAAmC,KACpD+D,EAAO7D,KACL,yBACEgD,IAAKjD,EAAQxF,GACbsI,UAAU,0CAEV,6BACE,yBACEA,UAAU,YACVuB,IAAKrE,EAAQsE,SACbF,IAAKpE,EAAQvF,QAGjB,yBAAKqI,UAAS,0BAA6B/C,MAfhB,8BAmBjC,OAAO,yBAAK+C,UAAU,oBAAoBgB,IAGtC+B,EAAmB,WACvB,OACE,oCACE,yBAAK/C,UAAU,qDACb,6BACE,kBAAC,IAAD,CAAiBc,KAAK,mBAExB,yBAAKd,UAAS,iCArCjBzG,EAAKd,OACLc,EAAKnB,MAAM2E,KAAO,oBAAsB,KACtCxD,EAAKnB,MAAM2E,KAAO,EAAI,aAAe,gBACrCxD,EAAKnB,MAAM2E,KAAO,EAAI,aAAe,gBACrCxD,EAAKnB,MAAM2E,KAAO,EAAI,aAAe,iBAiCpC,kBAIF,yBAAKiD,UAAU,QACb,kBAAC2D,EAAD,OAEF,yBAAK3D,UAAU,gBACb,kBAAC,IAAD,CAAiBc,KAAK,WAAW/D,KAAK,UAMxC6G,EAAmB,WACvB,OACE,oCACGrK,EAAKjB,SACJ,wBACE0H,UAAS,yHACX0D,MAEE,yBAAK1D,UAAU,yBACb,yBAAKA,UAAU,0BAAf,UACA,yBAAKA,UAAU,oBACZ/F,EAAkBV,EAAKhB,YAG5B,yBAAKyH,UAAU,gBACXsD,GACA,kBAAC,IAAD,CAAMpD,GAAI,YAAaF,UAAU,mBAAjC,YAEE,kBAAC,IAAD,CACEc,KAAK,cACL/D,KAAK,KACLiD,UAAU,iBAMlBsC,IAKV,OACE,oCACE,yBAAKtC,UAAU,cAAcI,IAAKmD,IAClC,yBAAKvD,UAAU,OAAOtI,GAAG,QACvB,wBAAIsI,UAAS,qBAAgBzG,EAAKd,KAAO,GAAK,iBAEzC6K,GACC,wBACE5B,QAAS,kBAAMjI,EAASjC,EAAWgH,SACnCwB,UAAS,sFACb0D,IADa,YAjGdnK,EAAKf,MAAQ,QAAU,KAoGlB,kBAACuK,EAAD,OAIN,kBAAC,GAAD,CAAWjB,UAAW4B,MACtB,kBAACE,EAAD,QAGJ,kBAAC,GAAD,CACElB,UAAW,kBAAMjJ,EAASjC,EAAWoH,SACrC+D,SAAU,kBAAMlJ,EAASjC,EAAWiH,aACpCgE,MAAOlJ,EAAKb,UC3ELmL,GAvDgB,WAAO,IAAD,EACFzE,qBAAWxH,GAApCE,EAD2B,EAC3BA,WAAYC,EADe,EACfA,SADe,EAERqH,qBAAW5F,GAA9BD,EAF2B,EAE3BA,KAAME,EAFqB,EAErBA,SAEN2B,EAAS0I,cAAT1I,KACF2I,EAA+C3I,EACjDtD,EAAW8F,MAAK,SAAAqC,GAAQ,OAAIA,EAAS7E,OAASA,KAC9CtD,EAAW8F,MAAK,SAAAqC,GAAQ,OATR,IASYA,EAASvI,MASnCsM,EAPc,SAA2BlE,GAC7C,IAAMM,EAAMZ,mBAIZ,OAHA3C,qBAAU,WACRuD,EAAIP,QAAUC,KAETM,EAAIP,QAEQoE,CAAY7I,GAEjCyB,qBAAU,WACJmH,IAAiB5I,GAAQ7B,EAAKd,MAAMgB,EAASjC,EAAWgH,UAC3D,CAACwF,EAAc5I,EAAM7B,EAAKd,KAAMgB,IAEnCoD,qBAAU,WACRqH,OAAOC,SAAS,EAAG,KAClB,CAAC/I,IAEJ,IAAiC6E,EAQjC,OACE,qCACI8D,GAAmB,kBAAC,IAAD,CAAU7D,GAAG,gBAChC9E,GAAQ2I,GAAmB,kBAAC,IAAD,CAAU7D,GAAE,WAAM6D,EAAgB3I,QAC/D,kBAACgJ,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAClCV,IAb0B9D,EAcD8D,EAbvBhM,EAAS+F,QAAO,SAAAZ,GACrB,OAAOA,EAAQ+D,gBAAgBrD,MAC7B,SAAA8G,GAAG,OAAIA,EAAIvD,aAAelB,EAASvI,UAWQ+F,KAAI,SAAAP,GAAO,OAClD,kBAAC,EAAD,CAAaiD,IAAKjD,EAAQxF,GAAIwF,QAASA,QAG7C,yBAAK8C,UAAS,UAAKzG,EAAKd,KAAO,GAAK,iBAClC,kBAAC2L,EAAA,EAAD,KACE,kBAACO,EAAA,EAAD,CAAKL,GAAI,EAAGE,GAAI,EAAGxE,UAAU,gBAC3B,kBAAC,GAAD,CAAMsD,YAAY,SCvBfsB,GA1B2B,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,UAAWnM,EAAc,EAAdA,QACvD0G,EAAUC,cAChB,OACE,yBAAKU,UAAU,SACb,yBAAKA,UAAU,iBACb,2BAAO+E,UAAQ,EAACC,MAAI,EAACC,OAAK,EAACC,aAAW,EAACC,OAAQN,EAAMM,QACnD,4BAAQ5D,IAAKsD,EAAMtI,IAAK8D,KAAK,eAE/B,yBAAKL,UAAU,6CACZ8E,GACC,yBAAK9E,UAAU,iCACb,4BAAQA,UAAU,MAAM0B,QAASrC,EAAQ+F,QACvC,kBAAC,IAAD,CAAiBtE,KAAK,aAAa/D,KAAK,KAAKiD,UAAU,SADzD,SAMJ,6BACE,4BAAKrH,Q,kBCSF0M,GA/BqC,SAAC,GAI9C,IAAD,IAHJC,gBAGI,MAHO,EAGP,EAFJhF,EAEI,EAFJA,SACAiF,EACI,EADJA,OAEQrN,EAAckH,qBAAW5F,GAAzBtB,UACR,OACE,kBAACsN,GAAA,EAAKC,MAAN,CAAYC,UAAU,oBACpB,kBAACF,GAAA,EAAKG,MAAN,gBACA,kBAACH,GAAA,EAAKI,QAAN,CACEC,GAAG,SACHC,QAAM,EACN/I,KAAK,KACLpF,KAAK,YACLoO,aAAcT,EACdhF,SAAUA,EACV0F,aAAY,OAACT,QAAD,IAACA,OAAD,EAACA,EAAQvM,YAEpBd,EAAUuF,KAAI,SAAAwI,GAAO,OACpB,4BAAQnG,MAAOmG,EAAQvO,GAAKuO,EAAQvO,GAAK,GAAIyI,IAAK8F,EAAQvO,IACvDuO,EAAQtO,UAIf,kBAAC6N,GAAA,EAAKI,QAAQM,SAAd,CAAuB7F,KAAK,WAA5B,OACGkF,QADH,IACGA,OADH,EACGA,EAAQvM,a,kBC5BXmN,GAAc,CAClB,CAAErF,KAAM,UAAuBnJ,KAAM,QACrC,CAAEmJ,KAAM,gBAA6BnJ,KAAM,cAC3C,CAAEmJ,KAAM,UAAuBnJ,KAAM,SA8DxByO,GApDyC,SAAC,GAKlD,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAf,EAEI,EAFJA,OACAgB,EACI,EADJA,UAOA,OACE,yBAAKvG,UAAU,cACb,kBAACwF,GAAA,EAAKG,MAAN,uBACA,kBAACa,GAAA,EAAD,CACExG,UAAS,mCACPuF,EAAOpM,cACH,kCACA,sBAENkH,KAAK,QACL1I,KAAK,UACLmI,MAAOuG,EAAMlN,cACbmH,SAjByB,SAAAR,GAC7ByG,EAAU,eAAKhB,EAAN,CAAcpM,cAAe,MACtCmN,EAAS,eAAKD,EAAN,CAAalN,cAAe2G,OAiB/BqG,GAAY1I,KAAI,SAAAgJ,GAAM,OACrB,kBAACC,GAAA,EAAD,CACEvG,IAAKsG,EAAO3F,KACZhB,MAAO2G,EAAO9O,KACdyL,QAASiD,EAAMlN,gBAAkBsN,EAAO9O,KAAO,YAAc,QAE7D,yBAAKqI,UAAU,oDACb,kBAAC,IAAD,CACEc,KAAM,CAAC,MAAO2F,EAAO3F,MACrB/D,KAAK,KACLoD,IAAKsG,EAAO3F,KACZd,UAAU,SAEZ,0BAAMA,UAAU,0CACbyG,EAAO9O,YAMlB,kBAAC6N,GAAA,EAAKI,QAAQM,SAAd,CAAuB7F,KAAK,WACzBkF,EAAOpM,iBCcDwN,GA9DmC,SAAC,GAQ5C,IAPLN,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAf,EAKI,EALJA,OACAgB,EAII,EAJJA,UACAK,EAGI,EAHJA,aACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEMC,EAA6B,SAAArG,GACjC,GAAIA,EAAEE,OAAOjJ,KAAM,CACjB4O,EAAU,eAAKhB,EAAN,gBAAe7E,EAAEE,OAAOjJ,KAAO,MACxC,IAAMmI,EAAK,gBAAMY,EAAEE,OAAOjJ,KAAO+I,EAAEE,OAAOd,OAC1CwG,EAAS,eAAKD,EAAN,GAAgBvG,MAI5B,OACE,kBAAC0F,GAAA,EAAD,CAAMsB,SAAUA,EAAUE,YAAU,EAAChH,UAAU,QAC7C,kBAAC,GAAD,CACEsF,SAAUe,EAAMrN,UAChBsH,SAAUyG,EACVxB,OAAQA,IAEV,kBAACC,GAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,GAAA,EAAKG,MAAN,uBACA,kBAACH,GAAA,EAAKI,QAAN,CACEvF,KAAK,QACL1I,KAAK,YACL6I,YAAY,SACZzD,KAAK,KACL+C,MAAOuG,EAAMnN,UACboH,SAAUyG,EACVE,QAASL,IACTZ,YAAaT,EAAOrM,YAEtB,kBAACsM,GAAA,EAAKI,QAAQM,SAAd,CAAuB7F,KAAK,WACzBkF,EAAOrM,YAGZ,kBAAC,GAAD,CACEmN,MAAOA,EACPC,SAAUA,EACVf,OAAQA,EACRgB,UAAWA,IAEb,yBAAKvG,UAAU,mBACb,4BAAQK,KAAK,SAASL,UAAU,qCAC7B6G,EACC,kBAAC,IAAD,CAAiB/F,KAAK,UAAUoG,OAAK,IAErC,kDAEE,kBAAC,IAAD,CAAiBpG,KAAK,cAAc/D,KAAK,KAAKiD,UAAU,cCqEvDmH,GAvH2B,SAAC,GAAyB,IAAvBd,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACtClH,qBAAW5F,GAA9BD,EADyD,EACzDA,KAAME,EADmD,EACnDA,SADmD,EAEnCkD,oBAAkB,GAFiB,mBAE1DkK,EAF0D,KAEhDO,EAFgD,OAGrCzK,mBAAsB,CAChD3D,UAAW,GACXE,UAAW,GACXC,cAAe,KANgD,mBAG1DoM,EAH0D,KAGlDgB,EAHkD,KASjE1J,qBAAU,WACRqH,OAAOC,SAAS,EAAG,KAClB,IAEHtH,qBAAU,WACJtD,EAAKd,MAAMgB,EAASjC,EAAWgH,UAClC,CAACjF,EAAKd,KAAMgB,IAEf,IAAM4F,EAAUC,cAEhBzC,qBAAU,WACHtD,EAAKhB,UAAU8G,EAAQlC,KAAK,OAChC,CAACkC,EAAS9F,IAEb,IAgBM8N,EAAc,WAClB,IAAMC,EAAmB,GAKzB,OAJKV,MAAgBU,EAAIpO,UAAYI,GAChC+M,EAAMrN,YAAWsO,EAAItO,UAAYM,GACjC+M,EAAMlN,gBAAemO,EAAInO,cAAgBG,GAC9CiN,EAAUe,GACyB,IAA5BC,OAAOC,KAAKF,GAAK7L,QAGpBmL,EAAe,WAEnB,QAAOP,EAAMnN,UAAUuO,MADR,gDAIXC,EAAW,uCAAG,WAAOC,GAAP,qBAAAtM,EAAA,6DAClB+L,GAAU,GACVQ,QAAQC,IAAI,gBAAiBjM,KAAKC,UAAU8L,IAF1B,SAGK3L,EAAY2L,EAAc,UAH/B,OAGZpM,EAHY,OAIlBqM,QAAQC,IAAI,YAAatM,GAED,MAApBA,EAASlC,QACX+N,GAAU,GACN7L,EAASC,MAAQD,EAASC,KAAK+J,QAC3BuC,EAAqBvM,EAASC,KAAK+J,OAAO9H,KAC9C,SAACsK,GAAD,OAAgBA,EAAMC,OAExBJ,QAAQG,MAAM,SAAUD,EAASG,KAAK,OACtC1B,EAAU,eAAKhB,EAAN,CAAchK,SAAUuM,EAASG,KAAK,WAEzCC,EADD,UACc3M,EAASlC,OADvB,cACmCkC,EAAS4M,YACjD5B,EAAU,eAAKhB,EAAN,CAAchK,SAAU2M,QAG7BE,EAAoB7M,EAASC,KACnCoM,QAAQC,IAAI,cAAejM,KAAKC,UAAUuM,IAC1C9B,EAAS,eAAK8B,IACd/I,EAAQlC,KAAK,kBAtBG,2CAAH,sDA0BXkL,EAAe,SAACC,GACpB,IADsC,EAChCtH,EAAS,GADuB,cAENzH,EAAKnB,MAAM0G,WAFL,IAEtC,2BAAsD,CAAC,IAAD,yBAA5C5B,EAA4C,KAAnCD,EAAmC,KAC9CsL,EAAqB,CACzB5K,UAAWT,EAAQxF,GACnB8Q,QAAO,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAQ5Q,GACjB+Q,OAAQxL,GAEV+D,EAAO7D,KAAKoL,IARwB,8BAUtC,OAAOvH,GAGT,OACE,oCACE,kBAACoD,EAAA,EAAD,CAAKC,GAAI,EAAGE,GAAI,GACd,kBAACI,EAAA,EAAD,CAAK3E,UAAU,YACb,kBAAC,GAAD,CAAMsD,YAAY,KAEpB,kBAACqB,EAAA,EAAD,KACE,kBAAC,GAAD,CACE0B,MAAOA,EACPC,SAAUA,EACVf,OAAQA,EACRgB,UAAWA,EACXK,aAAcA,EACdC,SAAUA,EACVC,SAnFyB,SAAApG,GAGjC,GAFAA,EAAEgI,iBAEGrB,IAAL,QAEOhB,EAAM3O,GACb,IAAMiR,EAAQ,eACTtC,EADS,CAEZpN,SAAS,IAAI2P,MAAOC,cACpBzP,WAAYG,EAAKhB,SACjBuQ,UAAWT,EAAahC,KAG1BqB,EAAYiB,SAwEHpD,KAAYA,EAAOhK,UACpB,yBAAKyE,UAAU,gCACZuF,EAAOhK,cC5EPwN,GAzC6B,SAAC,GAMtC,IAAD,IAGiBD,EARrB1Q,EAKI,EALJA,MACAwJ,EAII,EAJJA,SACAtB,EAGI,EAHJA,SACAuB,EAEI,EAFJA,aACAC,EACI,EADJA,UAEQ/J,EAAaqH,qBAAWxH,GAAxBG,SAcR,OAFKK,IAAD,OAAUyJ,QAAV,IAAUA,OAAV,EAAUA,EAAcwE,SAVPyC,EAWA,UAACjH,EAAawE,aAAd,aAAC,EAAoByC,UAAxC1Q,EAVK0Q,EACEA,EAAUrL,KAAI,SAAA8K,GAInB,MAAO,CAAErL,QAH4BnF,EAAS6F,MAC5C,SAAAV,GAAO,OAAIA,EAAQxF,KAAO6Q,EAAS5K,aAEnBV,SAAUsL,EAASE,WALhB,IAYvB,8CACGrQ,SADH,aACG,EAAOqF,KAAI,SAAAM,GACV,QACIA,EAAKb,SACL,kBAAC,EAAD,CACEiD,IAAKpC,EAAKb,QAAQxF,GAClBqG,KAAMA,EACN6D,SAAUA,EACVtB,SAAUA,EACVuB,aAAY,eAAOA,EAAP,CAAqBzJ,UACjC0J,UAAWA,SCqEVkH,GAnGmC,SAAC,GAAe,IAAb3C,EAAY,EAAZA,MAAY,EACzBjH,qBAAW5F,GAAzCtB,EADuD,EACvDA,UAAWqB,EAD4C,EAC5CA,KAAME,EADsC,EACtCA,SADsC,EAErCkD,mBAAiB,IAFoB,mBAExDoL,EAFwD,KAEjDkB,EAFiD,KAiC/D,OA7BApM,qBAAU,WACRqH,OAAOC,SAAS,EAAG,KAClB,IAEHtH,qBAAU,WAsBJtD,EAAKnB,MAAM2E,MArBO,WACpB,IAAImL,EAAU,GACd,GAAI7B,EAAMyC,UAAW,CAAC,IAAD,GACf,UAAAzC,EAAMyC,iBAAN,eAAiBrN,UAAWlC,EAAKnB,MAAM2E,OACzCmL,EAAU,yCACZ,IAHmB,EAGfgB,EAAU,EAHK,cAIa3P,EAAKnB,MAAM0G,WAJxB,IAInB,2BAAsD,CAAC,IAAD,yBAA5C5B,EAA4C,KAAnCD,EAAmC,KAC9CsL,EAAWlC,EAAMyC,UAAUI,GAE7BhM,EAAQxF,KAAO6Q,EAAS5K,WAAaV,IAAasL,EAASE,SAE7DP,EAAO,4CAAwChL,EAAQvF,KAAhD,cAA0D4Q,EAASE,OAAnE,sBAAuFxL,EAAvF,MACTiM,KAViB,oCAYdhB,EAAU,kBAEjB,IAAKA,EAEH,OADAzO,EAASjC,EAAW+G,OACb,GACF0K,EAASf,GAEGiB,KACpB,CAAC5P,EAAKnB,MAAOqB,EAAU4M,EAAMyC,YAG9B,oCACE,kBAAC1E,EAAA,EAAD,KACE,wBAAIpE,UAAU,sBAAd,uBAEF,kBAACoE,EAAA,EAAD,KACE,kBAACO,EAAA,EAAD,CAAKN,GAAI,GAAIG,GAAI,EAAGxE,UAAU,QAC5B,yBAAKA,UAAU,aACb,wBAAIA,UAAU,mBACZ,kBAAC,GAAD,CACE4B,UAAU,EACVtB,SAAU,aACVuB,aAAc,CAAEwE,SAChBvE,UAAU,SAEZ,wBAAI9B,UAAU,4EACZ,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,0BAAf,UACA,6BAAM/F,EAAkBoM,EAAMjN,mBAKnC2O,GACD,yBAAK/H,UAAU,gCAAgC+H,IAGnD,kBAACpD,EAAA,EAAD,KACE,yBAAK3E,UAAU,aACb,wBAAIA,UAAU,uBACZ,wBAAIA,UAAU,oFACZ,yBAAKA,UAAU,qBAAf,WACA,6BAAMtF,EAAiB2L,EAAM3O,MAE/B,wBAAIsI,UAAU,oFACZ,yBAAKA,UAAU,qBAAf,YACA,6BACG9H,EAAUuF,KAAI,SAAAwI,GACb,OAAOA,EAAQvO,KAAO2O,EAAMrN,UACxBiN,EAAQtO,UACR2K,OAIV,wBAAItC,UAAU,oFACZ,yBAAKA,UAAU,qBAAf,iBACA,yBAAKA,UAAU,eACZ,IAAI4I,KAAKvC,EAAMpN,SAASmQ,eAAe,WAG5C,wBAAIpJ,UAAU,oFACZ,yBAAKA,UAAU,qBAAf,UACA,6BAAMqG,EAAMnN,YAEd,wBAAI8G,UAAU,oFACZ,yBAAKA,UAAU,qBAAf,kBACA,6BAAMqG,EAAMlN,sBC9FbkQ,GAVC,WACd,OACE,yBAAKrJ,UAAU,oCACb,yBAAKA,UAAU,sCACb,kBAAC,IAAD,CAAiBc,KAAK,UAAU/D,KAAK,MAAMmK,OAAK,OCWlDoC,GAAuB,CAC3B,CACE5R,IAAK,EACLC,KAAM,cACN8J,YAAa,GACb1C,MAAO,EACPyC,SAAU,GACV+H,KAAM,EACNC,MAAO,IAAIZ,KACX3H,gBAAiB,KAyFNwI,GAhF+B,SAAC,GAA+B,IAA7BtK,EAA4B,EAA5BA,eAAgB0F,EAAY,EAAZA,MACvD9M,EAAaqH,qBAAWxH,GAAxBG,SACAwB,EAAS6F,qBAAW5F,GAApBD,KACA6B,EAAS0I,cAAT1I,KAHmE,EAIjCuB,mBAAoB,IAJa,mBAIpE+M,EAJoE,KAIrDC,EAJqD,OAK7ChN,oBAAkB,GAL2B,mBAKpEiN,EALoE,KAK3DC,EAL2D,KAwD3E,OAjDAhN,qBAAU,WACRgN,GAAYH,EAAcjO,UACzB,CAACmO,EAASF,IAEb7M,qBAAU,WAER,GADAqH,OAAOC,SAAS,EAAG,GACf/I,EAAM,EAiBY,WAClBwM,QAAQkC,KAAK,QACb,IAAMC,EAAWC,IAAQ5O,EAAM,CAAE6O,OAAO,IAClCjJ,EAAoBkJ,MAAMC,KAC9B,IAAIC,IACFrS,EAAS+F,QACP,SAAAZ,GAAO,OACL8M,IAAQ9M,EAAQvF,KAAM,CAAEsS,OAAO,IAAQI,QAAQN,IAAa,OAIpEnC,QAAQ0C,QAAQ,QAEhBX,GAAuB,OAAN3I,QAAM,IAANA,OAAA,EAAAA,EAAQvF,QAASuF,EAASsI,IAG7CiB,MAED,CAACnP,EAAMrD,IAEV8E,qBAAU,WACR,OAAO,WACLsC,GAAe,MAEhB,CAACA,IAGF,qCACI/D,GAAQ,kBAAC,IAAD,CAAU8E,GAAG,QACnBwJ,IAAkBA,EAAcjO,SAAW,kBAAC,GAAD,OAC5CiO,IAAkBJ,IACjB,kBAAC,GAAD,CAAUzE,MAAOA,EAAOC,WAAW,EAAOnM,QAAQ,UAElD,kBAACyL,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAClCiF,EAAcjM,KAAI,SAAAP,GAAO,OACxB,kBAAC,EAAD,CAAaiD,IAAKjD,EAAQxF,GAAIwF,QAASA,QAI/C,yBAAK8C,UAAS,UAAKzG,EAAKd,KAAO,GAAK,iBAClC,kBAAC2L,EAAA,EAAD,KACE,kBAACO,EAAA,EAAD,CAAKL,GAAI,EAAGE,GAAI,EAAGxE,UAAU,gBAC3B,kBAAC,GAAD,CAAMsD,YAAY,SC5FfM,GAbA,WACb,OACE,gCACE,6BACE,4DACA,uCACMlK,EAAS/B,KADf,YACuB+B,EAASE,QADhC,YAC2C4Q,kBCMtCC,GAAmB,CAC9B,YACA,YACA,UACA,UACA,WACA,SACA,YACA,YAGWC,GAAoB,CAC/B,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WASIC,GAA2C,uCAAG,WAAMtE,GAAN,SAAAhL,EAAA,+EAClD,IAAIuP,SAAQ,gBADsC,2CAAH,sDAE3CC,GAA6C,uCAAG,WAAMxE,GAAN,SAAAhL,EAAA,+EACpD,IAAIuP,SAAQ,gBADwC,2CAAH,sDAGtCE,GAAejT,wBAA6B,CACvD4S,oBACAC,qBACAK,aAdmB,EAenBC,gBAdsB,aAetBC,cAd8B,GAe9BC,iBAduB,aAevBC,kBAdgE,aAehEC,WAd6B,aAe7BT,aACAE,kB,SnBxDUpO,O,qBAAAA,I,iBAAAA,I,mBAAAA,I,iBAAAA,I,uBAAAA,I,sBAAAA,M,KAmBL,IoBuBQ4O,GAnC6C,SAAC,GAItD,IAHLhF,EAGI,EAHJA,MAGI,IAFJf,gBAEI,MAFO,EAEP,EADJhF,EACI,EADJA,SACI,EAC4ClB,qBAAW0L,IAAnDL,EADJ,EACIA,iBAAkBC,EADtB,EACsBA,kBAEpBY,OACShJ,IAAbgD,EACIoF,EAAkBpF,QACAhD,KAAb,OAAL+D,QAAK,IAALA,OAAA,EAAAA,EAAOhN,QACPqR,EAAkBrE,EAAMhN,QACxB,UAEN,OACE,4BACE1B,KAAK,cACLqI,UAAU,gCACV3F,MAAO,CAAEkR,MAAOD,EAAaE,gBAAiB,eAC9CzF,aAAcT,EACdhF,SAAU,SAACI,GAAD,OAAuCJ,EAASI,EAAG2F,KAE5DoE,EAAiBhN,KAAI,SAACpE,EAAQoS,GAAT,OACpB,4BACE3L,MAAO2L,EACPtL,IAAK9G,EACLgB,MAAO,CAAEkR,MAAOb,EAAkBe,KAEjCpS,QC5BL8M,GAAc,CAClB,CAAErF,KAAM,UAAuBnJ,KAAM,QACrC,CAAEmJ,KAAM,gBAA6BnJ,KAAM,cAC3C,CAAEmJ,KAAM,UAAuBnJ,KAAM,SAexB+T,GARiC,SAAC,GAAoB,IAAlB/T,EAAiB,EAAjBA,KAAMoF,EAAW,EAAXA,KACjD+D,EAAOqF,GAAYvI,MACvB,SAAA+N,GAAC,OAAIA,EAAEhU,KAAKiU,gBAAkBjU,EAAKiU,iBAErC,OAAI9K,EAAa,kBAAC,IAAD,CAAiBA,KAAM,CAAC,MAAOA,EAAKA,MAAO/D,KAAMA,IAC3D,sCCoKM8O,GAvKqB,SAAC,GAAe,IAAbxF,EAAY,EAAZA,MAAY,EAQ7CjH,qBAAW0L,IANbJ,EAF+C,EAE/CA,kBACAK,EAH+C,EAG/CA,aACAI,EAJ+C,EAI/CA,kBACAC,EAL+C,EAK/CA,WACAT,EAN+C,EAM/CA,UACAE,EAP+C,EAO/CA,YAP+C,EAUflO,mBAAiB,IAVF,mBAU1CmF,EAV0C,KAU/BgK,EAV+B,OAWLnP,mBAC1C0J,EAAMhN,QAZyC,mBAW1C0S,EAX0C,KAW1BC,EAX0B,OtBAT,WAAO,IAAD,EAClBrP,oBAAkB,GADA,mBACvCsP,EADuC,KAC9BC,EAD8B,OAEhBvP,oBAAkB,GAFF,mBAEvCkK,EAFuC,KAE7BO,EAF6B,OAGlBzK,oBAAkB,GAHA,mBAGvCwP,EAHuC,KAG9BC,EAH8B,OAIZzP,oBAAkB,GAJN,mBAIvC0P,EAJuC,KAI3BC,EAJ2B,OAKd3P,oBAAkB,GALJ,mBAKvC4P,EALuC,KAK5BC,EAL4B,KAO9C3P,qBAAU,WACJsP,GACFrP,YAAW,kBAAMsP,GAAS,KAAQ,OAEnC,CAACD,IAEJtP,qBAAU,WACJgK,GAAYsF,GAAS/E,GAAU,KAClC,CAACP,EAAUsF,IAEdtP,qBAAU,WACJ0P,GACFzP,YAAW,kBAAM0P,GAAW,KAAQ,OAErC,CAACD,IAEJ1P,qBAAU,WACJwP,GAAcE,GAAWD,GAAY,KACxC,CAACD,EAAYE,IAqBhB,MAAO,CAAC,CAAEN,UAASpF,WAAUsF,UAASE,aAAYE,aAnBlC,SAACE,GACf,OAAQA,GACN,KAAKhQ,EAAUiQ,MACbN,GAAS,GACTF,GAAS,GACT,MACF,KAAKzP,EAAUkQ,OACbvF,GAAU,GACV,MACF,KAAK3K,EAAUmQ,MACbV,GAAS,GACTE,GAAS,GACT,MACF,KAAK3P,EAAUoQ,SACbP,GAAY,MsBvBdQ,GAlB6C,0BAgB7Cb,EAhB6C,EAgB7CA,QAASpF,EAhBoC,EAgBpCA,SAAUsF,EAhB0B,EAgB1BA,QAASE,EAhBiB,EAgBjBA,WAAYE,EAhBK,EAgBLA,UAC1CQ,EAjB+C,KAwB3CC,EAA+B,SAAAtM,GACnCqM,EAAatQ,EAAUiQ,OACvBV,EAAkBjK,SAASrB,EAAEE,OAAOd,QAC/BgC,GAAWmL,KAQZnG,EAAqB,uCAAG,WAAOT,GAAP,eAAAhL,EAAA,6DAC5B0R,EAAatQ,EAAUkQ,QACnBZ,GAAkBA,IAAmB1F,EAAMhN,SAC7C8R,EAAkBY,EAAgB1F,GAClC4G,KAJ0B,SAMLtC,EAAUtE,GANL,QAMtB9K,EANsB,SAOZA,EAASlC,QAAU,CAAC,IAAK,KAAK6T,SAAS3R,EAASlC,SAC9D0T,EAAatQ,EAAUmQ,OARG,2CAAH,sDAYrBO,EAAqB,uCAAG,WAAO9G,GAAP,SAAAhL,EAAA,sDAC5B0R,EAAatQ,EAAUoQ,UACvBhC,EAAYxE,GAFgB,2CAAH,sDASrB4G,EAAa,WACjBnB,EAA2B,KAAdhK,EAAmB,OAAS,KAWrCwJ,OACehJ,IAAnByJ,EACIrB,EAAkBqB,QACAzJ,KAAb,OAAL+D,QAAK,IAALA,OAAA,EAAAA,EAAOhN,QACPqR,EAAkBrE,EAAMhN,QACxB,UAEA0J,EAAmB,WACvB,OACE,oCACE,yBAAK/C,UAAU,QAAQtF,EAAiB2L,EAAM3O,KAC9C,yBACEsI,UAAU,wBACV3F,MAAO,CAAEmR,gBAAiBF,IAE1B,kBAAC,GAAD,CACEjF,MAAOA,EACP/F,SAAU0M,EACV1H,SAAUyG,KAGd,yBAAK/L,UAAU,4CACb,yBAAKA,UAAU,QACZ,IAAI4I,KAAKvC,EAAMpN,SAASmU,mBAAmB,UAE9C,yBAAKpN,UAAU,WAAW/F,EAAkBoM,EAAMjN,cAEpD,yBAAK4G,UAAU,WACb,kBAAC,IAAD,CAAiBc,KAAK,gBAMxB8C,EAAmB,WACvB,OACE,wBACE5D,UAAS,yHAAoH8B,IAE7H,6BACE,kBAAC,GAAD,CAAanK,KAAM0O,EAAMlN,cAAe4D,KAAK,QAE/C,yBAAKiD,UAAU,oCACb,+BAAQqG,EAAMnN,YAEhB,yBAAK8G,UAAU,QACb,4BACEK,KAAK,SACLL,UAAU,uBACV0B,QAAS,kBAAMyL,EAAS9G,KAEtBgG,GAAc,kBAAC,IAAD,CAAiBvL,KAAK,UAAUoG,OAAK,KAClDqF,GAAa,kBAAC,IAAD,CAAiBzL,KAAK,WACpC,WAGLuF,EAAMjN,WACL,yBAAK4G,UAAU,aACb,4BACEK,KAAK,SACLL,UAAS,oBAnEZmM,EACH,cACAF,EACA,cACA,yBAgEM/J,UAAW+J,EACXvK,QAAS,kBAAMoF,EAAST,KAEtBQ,GAAY,kBAAC,IAAD,CAAiB/F,KAAK,UAAUoG,OAAK,KAChDiF,GAAW,kBAAC,IAAD,CAAiBrL,KAAK,WAClC,cAGJwB,IAKV,OACE,sCA1HyB,IAAlByI,GAAuB1E,EAAMhN,SAAW0R,IA4H3C,wBAAI/K,UAAU,4BACZ,wBAAIA,UAAU,cACZ,wBACEA,UAAS,wFAAmF8B,GAC5FJ,QAjGiB,SAAAhB,GACtBA,EAAEE,OAAOZ,UAAUkN,SAAS,iBAAiBD,MAkGxC,kBAAClK,EAAD,OAEF,kBAAC,GAAD,CACEnB,UAAU,EACVtB,SA7HuB,SAACI,EAAG2B,GACrC0K,EAAatQ,EAAUiQ,OACvBtB,EAAW/I,IA4HDR,aAAc,CAAEwE,SAChBvE,UAAWA,IAEb,kBAAC8B,EAAD,UClHGyJ,GArD0C,SAAC,GAInD,IAHLtC,EAGI,EAHJA,aACAE,EAEI,EAFJA,cACAqC,EACI,EADJA,mBACI,EAC4ClO,qBAAW0L,IAAnDL,EADJ,EACIA,iBAAkBC,EADtB,EACsBA,kBAM1B,OACE,yBAAK1K,UAAU,cACb,kBAACwG,GAAA,EAAD,CACExG,UAAU,yBACVK,KAAK,QACL1I,KAAK,UACLmI,MAAOiL,EACPzK,SAXW,SAACyL,GAChBuB,EAAmBvB,KAYf,kBAACrF,GAAA,EAAD,CACE5G,OAAQ,EACRsD,SAA2B,IAAlB2H,EAAsB,YAAc,OAC7ChO,KAAK,MAHP,MAME,0BAAMiD,UAAU,4CACbiL,EAAcsC,QAAO,SAAClS,EAAGmS,GAAJ,OAAUnS,EAAImS,IAAG,KAG1C/C,EAAiBhN,KAAI,SAACpE,EAAQoS,GAAT,OACpBR,EAAcQ,GACZ,kBAAC/E,GAAA,EAAD,CACEvG,IAAK9G,EACLyG,MAAO2L,EACPrI,QAAS2H,IAAiBU,EAAQ,YAAc,OAChD1O,KAAK,MAEJ1D,EACD,0BACE2G,UAAU,mCACV3F,MAAO,CAAEmR,gBAAiBd,EAAkBe,KAE3CR,EAAcQ,UAGjBnJ,QCDCmL,GA7C6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrCjD,EAAqBrL,qBAAW0L,IAAhCL,iBADkD,EAOtDrL,qBAAW0L,IAJbC,EAHwD,EAGxDA,aACAC,EAJwD,EAIxDA,gBACAC,EALwD,EAKxDA,cACAC,EANwD,EAMxDA,iBAqBF,OAZArO,qBAAU,WAER,IADA,IAAI8Q,EAAoB,GADV,WAELhC,GACP,IAAIzC,EAAU,EACdwE,EAAO1Q,SAAQ,SAAAqJ,GACTA,EAAMhN,SAAWsS,GAAGzC,OAE1ByE,EAAQxQ,KAAK+L,IALNyC,EAAI,EAAGA,EAAIlB,EAAiBhP,OAAQkQ,IAAM,EAA1CA,GAOTT,EAAiByC,KAChB,CAACD,EAAQjD,EAAkBS,IAG5B,yBAAKlL,UAAU,aACZ0N,EAAOjS,OACN,kBAAC,GAAD,CACEsP,aAAcA,EACdE,cAAeA,EACfqC,mBAxBmB,SAACvB,GACtBA,EAAiBtB,EAAiBhP,QACpCuP,EAAgBe,WAwBZzJ,EACJ,wBAAItC,UAAU,uBACX0N,EAAOjQ,KAAI,SAAA4I,GAAK,OACf,kBAAC,GAAD,CAAOlG,IAAKkG,EAAM3O,GAAI2O,MAAOA,UCoHxBuH,GAhJc,WAAO,IAC1B1V,EAAckH,qBAAW5F,GAAzBtB,UADyB,EAESyE,mBAAkB,IAF3B,mBAE1BkR,EAF0B,KAEXC,EAFW,OAGHnR,oBAAkB,GAHf,mBAG1BiN,EAH0B,KAGjBC,EAHiB,OAIOlN,oBAAkB,GAJzB,mBAI1BoO,EAJ0B,KAIZC,EAJY,OAKSrO,mBAAmB,IAL5B,mBAK1BsO,EAL0B,KAKXC,EALW,KAOzB9P,EAAS0I,cAAT1I,KACFiE,EAAUC,cAEVyO,EAAsC7V,EAAU0F,MACpD,SAAAqI,GAAO,OAAIA,EAAQ7K,QAAR,OAAiBA,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMwQ,kBAG9BoC,EAAmBD,EAAiBA,EAAerW,GAAK,EAE9DmF,qBAAU,WACHoO,EAAcF,IAAeC,GAAiB,KAClD,CAACD,EAAcE,IAElBpO,qBAAU,WASJmR,EARgB,uCAAG,4BAAA3S,EAAA,sEACS4S,EAAA,2BACRD,IAFD,QACfN,EADe,QAIdQ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElV,QAAUmV,EAAEnV,QAAU,GAAK,KACpD6U,EAAiBJ,GACjB7D,GAAW,GANU,2CAAH,oDAQEwE,GACjBxE,GAAW,KACf,CAACmE,IAEJ,IAgCMrD,EAA2C,uCAAG,WAAOtE,GAAP,eAAAhL,EAAA,sEAC3B4S,EAAgB5H,EAAO,SAAUA,EAAM3O,IADZ,cAC5C6D,EAD4C,OAElDqM,QAAQC,IAAI,cAAejM,KAAKC,UAAUwK,IAC1CuB,QAAQC,IAAI,YAAatM,GAHyB,kBAI3CA,GAJ2C,2CAAH,sDAO3C+S,EAAc,SAACjI,GACnB,IACMkI,EADiBV,EAAc/P,QAAO,SAAA0Q,GAAC,OAAIA,IAAMnI,KAEpDoI,OAAO,CAACpI,IACR6H,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElV,QAAUmV,EAAEnV,QAAU,GAAK,KAEhD6U,EAAiBS,IAGb1D,EAA6C,uCAAG,WACpDxE,GADoD,iBAAAhL,EAAA,0DAGhDgL,EAAM3O,GAH0C,gCAI3BuW,EAAQ,SAAU5H,EAAM3O,IAJG,cAI5C6D,EAJ4C,OAKlDqM,QAAQC,IAAI,gBAAiBjM,KAAKC,UAAUwK,IAC5CuB,QAAQC,IAAI,YAAatM,GACrBA,GAAYA,EAASlC,QAA8B,MAApBkC,EAASlC,SACpCqV,EAAiBb,EACpB/P,QAAO,SAAA0Q,GAAC,OAAIA,IAAMnI,KAClB6H,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElV,QAAUmV,EAAEnV,QAAU,GAAK,KAChD6U,EAAiBY,IAX+B,kBAa3CnT,GAb2C,2CAAH,sDAiB7CoT,EAAgB,SAACvW,GACrB,IAAI4I,EAAS,EAEb,OADA5I,EAAMqF,KAAI,SAAAM,GAAI,OAAKiD,GAAUjD,EAAKb,QAAQ6B,MAAQhB,EAAKd,YAChD+D,GAGH4N,EAAc,SAACxW,EAAmBoQ,GACtC,OAAOpQ,EAAMqF,KAAI,SAAAM,GAAI,MAAK,CACxBJ,UAAWI,EAAKb,QAAQxF,GACxB8Q,UACAC,OAAQ1K,EAAKd,cAIjB,OACE,kBAAC6N,GAAa+D,SAAd,CACE/O,MAAO,CACL2K,oBACAC,qBACAK,eACAC,kBACAC,gBACAC,mBACAC,kBA/EoB,SAAC9R,EAAgBgN,GACzCA,EAAMhN,OAASA,EAEf,IACMkV,EADiBV,EAAc/P,QAAO,SAAA0Q,GAAC,OAAIA,IAAMnI,KAEpDoI,OAAO,CAACpI,IACR6H,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElV,QAAUmV,EAAEnV,QAAU,GAAK,KAChD6U,EAAiBS,IAyEbnD,WAtEyB,SAAC,GAAsC,IAApChT,EAAmC,EAAnCA,MAAO2F,EAA4B,EAA5BA,KAAMsI,EAAsB,EAAtBA,MAAOpJ,EAAe,EAAfA,SAC/C7E,GAAU2F,GAASsI,IACpBpJ,EACFc,EAAKd,SAAWA,EAEhB7E,EAAQA,EAAM0F,QAAO,SAAA6N,GAAC,OAAIA,IAAM5N,KAElCsI,EAAMjN,WAAauV,EAAcvW,GACjCiO,EAAMyC,UAAY8F,EAAYxW,EAAOiO,EAAM3O,IAE3C4W,EAAYjI,KA6DRsE,YACAE,gBAGF,kBAACzG,EAAA,EAAD,KACE,kBAACO,EAAA,EAAD,KACE,wBAAI3E,UAAU,uBAAd,gBAEF,kBAAC2E,EAAA,EAAD,CAAKN,GAAI,GAAIC,GAAI,EAAGtE,UAAU,QAC5B,kBAAC,GAAD,CAAesF,SAAU0I,EAAkB1N,SAnG7B,SAACI,GACrB,IAAMoO,EAAoB/M,SAASrB,EAAEE,OAAOd,OACtCiP,EAAkB7W,EAAU0F,MAChC,SAAAqI,GAAO,OAAIA,EAAQvO,KAAOoX,KAEtBE,EAAQD,EAAkBA,EAAgB3T,KAAO,GACvDiE,EAAQlC,KAAR,iBAAuB6R,SAgGrB,kBAAC5K,EAAA,EAAD,KACE,kBAACO,EAAA,EAAD,KACGiF,EAAU,kBAAC,GAAD,MAAc,kBAAC,GAAD,CAAW8D,OAAQG,QCvDvCoB,GArEH,WAAO,IAAD,ECpBd,WAAO,IAAD,EACsBtS,oBAAkB,GADxC,mBACDiN,EADC,KACQC,EADR,OAE4BlN,mBAA4B,IAFxD,mBAED7E,EAFC,KAEWoX,EAFX,OAGwBvS,mBAAoB,IAH5C,mBAGD5E,EAHC,KAGSwS,EAHT,KAKR1N,qBAAU,WACRgN,IAAa/R,EAAW2D,QAAU1D,EAAS0D,WAC1C,CAACmO,EAAS9R,EAAYC,IAEzB8E,qBAAU,YACgB,uCAAG,4BAAAxB,EAAA,sEACU4S,EACjC,cACA,GAHuB,QACnB7M,EADmB,QAKvB+N,QAAQ1X,GACV2J,EAAE3D,KACA,SAAAwC,GAAQ,OAAKA,EAAS7E,KAAO4O,IAAQ/J,EAAStI,KAAM,CAAEsS,OAAO,OAE/DiF,EAAc9N,GATW,2CAAH,qDAWxBgO,KACC,IAEHvS,qBAAU,YACc,uCAAG,4BAAAxB,EAAA,sEACY4S,EAAiB,YAAY,GADzC,OACjBoB,EADiB,OAEvBC,EAAqBD,GACrBA,EAAUnB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExW,KAAOyW,EAAEzW,KAAO,GAAK,KACjD4S,EAAY8E,GAJW,2CAAH,qDAMtBE,KACC,IAEH,IAAMD,EAAuB,SAACD,GAC5BA,EAAUnB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE3E,MAAQ4E,EAAE5E,MAAQ,GAAK,KACnD6F,EACGtV,MAAM,EhClD0B,GgCmDhC0D,KAAI,SAAAP,GAAO,OACVA,EAAQ+D,gBAAgB9D,KAAK,CAAEgE,WAAY1J,EAAcC,SAI/D,MAAO,CAAEI,aAAYC,WAAU6R,WDtBW4F,GAAlC1X,EADQ,EACRA,WAAYC,EADJ,EACIA,SAAU6R,EADd,EACcA,QADd,EAESlN,EAAQ3E,GAFjB,mBAETwB,EAFS,KAEHE,EAFG,OAGUkD,mBAAgB5D,GAH1B,mBAGTsN,EAHS,KAGFC,EAHE,OAKsB3J,oBAAkB,GALxC,mBAKTuC,EALS,KAKIC,EALJ,KAOV0F,EEpCuD,WAAO,IAAD,EACzClI,mBAAgB,CAAEJ,IAAK,GAAI4I,OAAQ,KADM,mBAC5DN,EAD4D,KACrD4K,EADqD,KAanE,OAVA5S,qBAAU,YACU,uCAAG,gCAAAxB,EAAA,sEACA4S,EAAA,UAAiBvU,EAASI,KAA1B,mBADA,OACb4V,EADa,OAEbnT,EAAM2H,OAAOyL,IAAIC,gBAAgBF,GACjCvK,EAHa,UAGDzL,EAASI,KAHR,kBAInB2V,EAAS,CAAElT,MAAK4I,WAJG,2CAAH,qDAMlB0K,KACC,IAEIhL,EFuBOiL,GAQd,OANAjT,qBAAU,WACR3E,EAAUuF,KACR,SAAAwI,GAAO,OAAKA,EAAQ7K,KAAO4O,IAAQ/D,EAAQtO,KAAM,CAAEsS,OAAO,SAE3D,IAEIL,EACL,kBAAC,GAAD,MAEA,yBAAKlS,GAAG,WACN,kBAACE,EAAeiX,SAAhB,CACE/O,MAAO,CACLhI,aACAC,WACAC,KAAM,CAAEP,gBAAeQ,wB/BxDM,K+B2D/B,kBAACuB,EAAaqV,SAAd,CACE/O,MAAO,CAAE5H,YAAWqB,OAAME,WAAUV,eAEpC,kBAAC,EAAD,CACEmG,YAAaA,EACbC,eAAgBA,IAElB,kBAAC4Q,EAAA,EAAD,CAAWC,OAAK,EAACnK,GAAG,QAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoK,KAAK,aACV,kBAAC,GAAD,CAAU5J,MAAOA,EAAOC,SAAUA,KAEpC,kBAAC,IAAD,CAAO2J,KAAK,iBACV,kBAAC,GAAD,CAAc5J,MAAOA,KAEvB,kBAAC,IAAD,CAAO4J,KAAK,cACV,kBAAC,GAAD,CAAUpL,MAAOA,EAAOC,WAAW,EAAMnM,QAAQ,SAEnD,kBAAC,IAAD,CAAOsX,KAAK,SAASC,OAAK,GACxB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,gBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,GAAD,CAAY9Q,eAAgBA,EAAgB0F,MAAOA,KAErD,kBAAC,IAAD,CAAOoL,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAU9F,KAAK,IAAI+F,OAAK,EAAChQ,GAAG,iBAC5B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUA,GAAG,kBAInB,kBAAC,GAAD,UG3FViQ,IAASC,OACP,kBAAC,IAAD,CAAQC,SAAU7F,kBAChB,kBAAC,GAAD,OAEF8F,SAASC,eAAe,W","file":"static/js/main.2f2f77c3.chunk.js","sourcesContent":["// icons\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faShoppingCart,\r\n  faAngleUp,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPlusCircle,\r\n  faMinusCircle,\r\n  faSpinner,\r\n  faSearch,\r\n  faTimes,\r\n  faCheck\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  faCcVisa,\r\n  faCcMastercard,\r\n  faCcAmex\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nlibrary.add(\r\n  faShoppingCart,\r\n  faAngleUp,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPlusCircle,\r\n  faMinusCircle,\r\n  faSpinner,\r\n  faSearch,\r\n  faTimes,\r\n  faTrashAlt,\r\n  faCcVisa,\r\n  faCcMastercard,\r\n  faCcAmex,\r\n  faCheck\r\n);\r\n","import { createContext } from \"react\";\r\n\r\nexport const NEWS_CATEGORY: ProductCategory = { id: -1, name: \"Newly added\" };\r\nexport const NUMBER_OF_ITEMS_IN_NEWS = 4;\r\n\r\ninterface IProductContext {\r\n  categories: ProductCategory[];\r\n  products: Product[];\r\n  news: { NEWS_CATEGORY: ProductCategory; NUMBER_OF_ITEMS_IN_NEWS: number };\r\n}\r\n\r\nexport const ProductContext = createContext<IProductContext>({\r\n  categories: [],\r\n  products: [],\r\n  news: { NEWS_CATEGORY, NUMBER_OF_ITEMS_IN_NEWS }\r\n});\r\n","import { useState, useEffect } from \"react\";\r\nimport { emptyCart, MIN_QTY, MAX_QTY } from \"../contexts/OrderContext\";\r\n\r\nimport { APP_INFO } from \"../../lib/utils\";\r\n\r\nexport enum CartAction {\r\n  ADD,\r\n  UPDATE,\r\n  DELETE,\r\n  RESET,\r\n  TOGGLE,\r\n  HIDE_MODAL\r\n}\r\nexport type CartDispatch = (\r\n  action: CartAction,\r\n  payload?:\r\n    | {\r\n        product: Product;\r\n        quantity: number;\r\n      }\r\n    | undefined\r\n) => void;\r\n\r\ntype UseCart = (products: Product[]) => [Cart, CartDispatch];\r\n\r\nexport const useCart: UseCart = (products: Product[]) => {\r\n  const [cart, setCart] = useState<Cart>(emptyCart);\r\n\r\n  useEffect(() => {\r\n    if (cart.blink) {\r\n      setTimeout(() => setCart({ ...cart, blink: false }), 500);\r\n    }\r\n    if (cart.items.size) {\r\n      localStorage.setItem(`${APP_INFO.name}.cart`, JSON.stringify(cart));\r\n      const items: number[][] = [];\r\n      cart.items.forEach(\r\n        (quantity, product) => !!product && items.push([product.id, quantity])\r\n      );\r\n      localStorage.setItem(`${APP_INFO.name}.items`, JSON.stringify(items));\r\n    }\r\n  }, [cart]);\r\n\r\n  useEffect(() => {\r\n    const initialCart: () => Cart = () => {\r\n      let _cart: Cart = emptyCart;\r\n\r\n      const cartString = localStorage.getItem(`${APP_INFO.name}.cart`);\r\n      const itemsString = localStorage.getItem(`${APP_INFO.name}.items`);\r\n      if (\r\n        cartString &&\r\n        cartString.length &&\r\n        itemsString &&\r\n        itemsString.length\r\n      ) {\r\n        const storedCart: Cart = { ..._cart, ...JSON.parse(cartString) };\r\n        const itemsArray: [Product, number][] = JSON.parse(itemsString).map(\r\n          (values: number[]) => {\r\n            const [productId, quantity] = values;\r\n            const product = products.find(p => p.id === productId);\r\n            if (product) return [product, quantity];\r\n            // eslint-disable-next-line array-callback-return\r\n            else return;\r\n          }\r\n        );\r\n        storedCart.items = new Map<Product, number>(\r\n          itemsArray.filter(item => !!item)\r\n        );\r\n        if (storedCart.items.size) _cart = storedCart;\r\n      }\r\n      return _cart;\r\n    };\r\n    if (products && products.length) setCart(initialCart());\r\n  }, [products]);\r\n\r\n  const getTotals = (items: Map<Product, number>) => {\r\n    let subTotal = 0;\r\n    let articles = 0;\r\n    for (let [product, quantity] of items.entries()) {\r\n      const price = product.price * quantity;\r\n      subTotal += price;\r\n      articles += quantity;\r\n    }\r\n    return [subTotal, articles];\r\n  };\r\n\r\n  const resetCart = () => {\r\n    setCart(emptyCart);\r\n    localStorage.removeItem(`${APP_INFO.name}.cart`);\r\n    localStorage.removeItem(`${APP_INFO.name}.items`);\r\n  };\r\n\r\n  const reducer = (\r\n    action: CartAction,\r\n    payload?: { product: Product; quantity: number }\r\n  ) => {\r\n    const newCart = { ...cart };\r\n    const product = payload?.product;\r\n    let quantity = payload?.quantity ? payload?.quantity : 0;\r\n    const currentQuantity = product ? newCart.items.get(product) : 0;\r\n\r\n    switch (action) {\r\n      case CartAction.RESET:\r\n        resetCart();\r\n        break;\r\n      case CartAction.TOGGLE:\r\n        if (cart.articles) setCart({ ...cart, open: !cart.open });\r\n        break;\r\n      case CartAction.HIDE_MODAL:\r\n        newCart.modal.show = false;\r\n        setCart({ ...newCart });\r\n        break;\r\n      case CartAction.ADD:\r\n        quantity = currentQuantity ? currentQuantity + quantity : quantity;\r\n      /* falls through */\r\n      default:\r\n        [newCart.blink, newCart.open] =\r\n          action === CartAction.ADD ? [true, false] : [!cart.open, cart.open];\r\n        const newCartItems = new Map(cart.items);\r\n        if (action === CartAction.DELETE) {\r\n          newCart.modal.show = false;\r\n          if (cart.modal.item?.product)\r\n            newCartItems.delete(cart.modal.item.product);\r\n        } else if (product) {\r\n          if (quantity === 0) {\r\n            newCart.modal.item = {\r\n              product,\r\n              quantity: currentQuantity ? currentQuantity : 0\r\n            };\r\n            newCart.modal.show = true;\r\n          } else if (quantity >= MIN_QTY && quantity <= MAX_QTY) {\r\n            newCartItems.set(product, quantity);\r\n          }\r\n        }\r\n        if (!newCartItems.size) {\r\n          resetCart();\r\n        } else {\r\n          [newCart.items, newCart.subTotal, newCart.articles] = [\r\n            newCartItems,\r\n            ...getTotals(newCartItems)\r\n          ];\r\n          setCart({ ...newCart });\r\n        }\r\n    }\r\n  };\r\n\r\n  return [cart, reducer];\r\n};\r\n","import { createContext } from \"react\";\r\nimport { CartDispatch } from \"../hooks/useCart\";\r\n\r\nexport const companies: Company[] = [\r\n  { id: 0, name: \"\" },\r\n  { id: 9001, name: \"Telia\" },\r\n  { id: 9002, name: \"Volvo\" },\r\n  { id: 9003, name: \"Skanska\" },\r\n  { id: 9004, name: \"ABB\" }\r\n];\r\n\r\nexport const emptyCart: Cart = {\r\n  items: new Map<Product, number>(),\r\n  articles: 0,\r\n  subTotal: 0,\r\n  blink: false,\r\n  open: false,\r\n  modal: {\r\n    caption: \"Delete item?\",\r\n    labelConfirm: \"Delete\",\r\n    labelCancel: \"Cancel\",\r\n    show: false\r\n  }\r\n};\r\n\r\nexport const emptyOrder: Order = {\r\n  companyId: 0,\r\n  created: \"\",\r\n  createdBy: \"\",\r\n  paymentMethod: \"\",\r\n  totalPrice: 0,\r\n  status: 0\r\n};\r\n\r\nexport const MIN_QTY = 1;\r\nexport const MAX_QTY = 99;\r\n\r\nexport const errorMessage = {\r\n  createdBy: \"Please provide an accurate e-mail address!\",\r\n  companyId: \"Please select company!\",\r\n  paymentMethod: \"Please select payment method!\"\r\n};\r\n\r\ninterface IOrderContext {\r\n  companies: Company[];\r\n  cart: Cart;\r\n  dispatch: CartDispatch;\r\n  emptyOrder: Order;\r\n}\r\n\r\nconst cart = { ...emptyCart };\r\nconst dispatch: CartDispatch = () => {};\r\n\r\nexport const OrderContext = createContext<IOrderContext>({\r\n  companies,\r\n  cart,\r\n  dispatch,\r\n  emptyOrder\r\n});\r\n","import packageJSON from \"../../package.json\";\r\n\r\nexport const APP_INFO = {\r\n  name: packageJSON.name,\r\n  version: packageJSON.version,\r\n  homepage: packageJSON.homepage,\r\n  root: packageJSON.homepage.slice(packageJSON.homepage.lastIndexOf(\"/\"))\r\n};\r\n\r\nexport const getCurrencyFormat: (number: number) => string = (number: number) =>\r\n  new Intl.NumberFormat(\"se-SV\", {\r\n    style: \"currency\",\r\n    currency: \"SEK\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0\r\n  }).format(number);\r\n\r\nexport const getOrderIdFormat: (\r\n  number: number | undefined\r\n) => string = number => String(number).replace(/(.)(?=(\\d{5})+$)/g, \"$1-\");\r\n","import axios, { AxiosInstance } from \"axios\";\r\nimport { APP_INFO } from \"./utils\";\r\n\r\nconst apiClient: AxiosInstance = axios.create({\r\n  baseURL: \"https://dreadnallen-react-webshop.firebaseapp.com/api/v1\",\r\n  responseType: \"json\",\r\n  headers: { \"Content-Type\": \"application/json\" }\r\n});\r\n\r\nexport const get = async <T extends {}>(\r\n  slug: string,\r\n  cache: boolean = false\r\n) => {\r\n  try {\r\n    const response = await apiClient.get<T[]>(`/${slug}`);\r\n    const data = response.data;\r\n    if (data && data.length && cache)\r\n      localStorage.setItem(`${APP_INFO.name}.${slug}`, JSON.stringify(data));\r\n    return data;\r\n  } catch (err) {\r\n    const data = localStorage.getItem(`${APP_INFO.name}.${slug}`);\r\n    if (data && data.length) return JSON.parse(data) as T[];\r\n    if (err && err.response) return err.response.data;\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const save = async <T extends {}>(\r\n  input: T,\r\n  slug: string,\r\n  id?: number\r\n) => {\r\n  try {\r\n    if (id) {\r\n      const response = await apiClient.put<T>(`/${slug}/${id}`, input);\r\n      return { status: response.status, data: response.data };\r\n    } else {\r\n      const response = await apiClient.post<T>(`/${slug}`, input);\r\n      return { status: response.status, data: response.data };\r\n    }\r\n  } catch (err) {\r\n    if (err && err.response) return err.response;\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const del = async (slug: string, id: number) => {\r\n  try {\r\n    const response = await apiClient.delete(`/${slug}/${id}`, {\r\n      data: { id }\r\n    });\r\n    return response;\r\n  } catch (err) {\r\n    if (err && err.response) return err.response;\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const fetchBLOB = async (url: string) => {\r\n  const client: AxiosInstance = axios.create({\r\n    responseType: \"blob\",\r\n    headers: { \"Content-Type\": \"video/x-matroska\" }\r\n  });\r\n\r\n  try {\r\n    const response = await client.get(url);\r\n    return response.data;\r\n  } catch (err) {\r\n    if (err && err.response) return err.response.data;\r\n    throw err;\r\n  }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport enum SaveState {\r\n  DEFAULT,\r\n  DIRTY,\r\n  SAVING,\r\n  SAVED,\r\n  DELETING,\r\n  DELETED\r\n}\r\n\r\ntype Flags = {\r\n  isDirty: boolean;\r\n  isSaving: boolean;\r\n  isSaved: boolean;\r\n  isDeleting: boolean;\r\n  isDeleted: boolean;\r\n};\r\n\r\ntype UseSaveState = () => [Flags, (state: SaveState) => void];\r\n\r\nexport const useSaveState: UseSaveState = () => {\r\n  const [isDirty, setDirty] = useState<boolean>(false);\r\n  const [isSaving, setSaving] = useState<boolean>(false);\r\n  const [isSaved, setSaved] = useState<boolean>(false);\r\n  const [isDeleting, setDeleting] = useState<boolean>(false);\r\n  const [isDeleted, setDeleted] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (isSaved) {\r\n      setTimeout(() => setSaved(false), 1000);\r\n    }\r\n  }, [isSaved]);\r\n\r\n  useEffect(() => {\r\n    if (isSaving && isSaved) setSaving(false);\r\n  }, [isSaving, isSaved]);\r\n\r\n  useEffect(() => {\r\n    if (isDeleted) {\r\n      setTimeout(() => setDeleted(false), 1000);\r\n    }\r\n  }, [isDeleted]);\r\n\r\n  useEffect(() => {\r\n    if (isDeleting && isDeleted) setDeleting(false);\r\n  }, [isDeleting, isDeleted]);\r\n\r\n  const reducer = (state: SaveState) => {\r\n    switch (state) {\r\n      case SaveState.DIRTY:\r\n        setSaved(false);\r\n        setDirty(true);\r\n        break;\r\n      case SaveState.SAVING:\r\n        setSaving(true);\r\n        break;\r\n      case SaveState.SAVED:\r\n        setDirty(false);\r\n        setSaved(true);\r\n        break;\r\n      case SaveState.DELETING:\r\n        setDeleting(true);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return [{ isDirty, isSaving, isSaved, isDeleting, isDeleted }, reducer];\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  useRef,\r\n  useEffect,\r\n  Dispatch,\r\n  useCallback,\r\n  useContext\r\n} from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// context\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\n\r\ninterface NavigationProps {\r\n  clearSearch: boolean;\r\n  setClearSearch: Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst Navigation: React.FC<NavigationProps> = ({\r\n  clearSearch,\r\n  setClearSearch\r\n}) => {\r\n  const { categories } = useContext(ProductContext);\r\n  const history = useHistory();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const toggleRef = useRef<HTMLInputElement>(null);\r\n\r\n  const hideSearch = useCallback(\r\n    (noDelay?: boolean) => {\r\n      if (!noDelay) setTimeout(() => hideSearch(true), 2000);\r\n      else\r\n        !(inputRef && inputRef.current && inputRef.current.value) &&\r\n          toggleRef &&\r\n          toggleRef.current &&\r\n          (toggleRef.current.checked = false);\r\n    },\r\n    [inputRef, toggleRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (clearSearch && inputRef.current) {\r\n      inputRef.current.value = \"\";\r\n      hideSearch();\r\n    }\r\n    setClearSearch(false);\r\n  }, [clearSearch, hideSearch, setClearSearch]);\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const input: string = encodeURIComponent(e.target.value);\r\n    if (!input) hideSearch();\r\n    else input.length > 1 && history.push(`/search/${input}`);\r\n  };\r\n\r\n  const focusSearch = () => {\r\n    if (toggleRef.current?.checked) inputRef.current?.focus();\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-secondary sticky-top px-2 py-1\">\r\n      <nav className=\"nav nav-pills nav-fill align-items-center\">\r\n        {categories.map(category => {\r\n          return (\r\n            <NavLink\r\n              className=\"nav-item nav-link h2 pt-2 pb-1 my-1\"\r\n              to={`/${category.slug}`}\r\n              key={category.id}\r\n            >\r\n              {category.name}\r\n            </NavLink>\r\n          );\r\n        })}\r\n        <div className=\"nav-item\">\r\n          <input\r\n            ref={toggleRef}\r\n            type=\"checkbox\"\r\n            id=\"search-toggle\"\r\n            onChange={focusSearch}\r\n          />\r\n          <div className=\"search mx-4 my-0 align-self-center\">\r\n            <div className=\"d-flex\">\r\n              <input\r\n                ref={inputRef}\r\n                className=\"form-control\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <label\r\n            className=\"search-open btn btn-secondary m-0\"\r\n            htmlFor=\"search-toggle\"\r\n          >\r\n            <FontAwesomeIcon icon=\"search\" />\r\n          </label>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// context\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\n\r\ninterface CategoryBadges {\r\n  product: Product;\r\n}\r\n\r\nconst CategoryBadges: React.FC<CategoryBadges> = ({ product }) => {\r\n  const { categories } = useContext(ProductContext);\r\n\r\n  let result: React.ReactNodeArray = [];\r\n  const currentCategories = categories.filter(\r\n    category =>\r\n      category.id > 0 &&\r\n      product.productCategory?.find(pc => pc.categoryId === category.id)\r\n  );\r\n\r\n  currentCategories.map(c =>\r\n    result.push(\r\n      <Link\r\n        key={c.id}\r\n        className={`badge badge-pill mr-2 text-secondary product-category-${c.id}`}\r\n        to={`/${c.slug}`}\r\n      >\r\n        {c.name}\r\n      </Link>\r\n    )\r\n  );\r\n  return <>{result}</>;\r\n};\r\n\r\nexport default CategoryBadges;\r\n","import React, { useContext } from \"react\";\r\n\r\n// utils\r\nimport { getCurrencyFormat } from \"../../lib/utils\";\r\n\r\n// components\r\nimport CategoryBadges from \"./CategoryBadges\";\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\nimport { CartAction } from \"../hooks/useCart\";\r\n\r\ninterface ProductCardProps {\r\n  product: Product;\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\r\n  const { dispatch } = useContext(OrderContext);\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <div className=\"card mx-1 mx-sm-3 my-3 bg-dark shadow-sm\">\r\n        <div className=\"overlay\">\r\n          <img\r\n            className=\"card-img-top img-fluid\"\r\n            alt={product.name}\r\n            src={product.imageUrl}\r\n          />\r\n          <div className=\"card-description\">\r\n            <div className=\"d-flex\">\r\n              <div>\r\n                <img\r\n                  className=\"thumbnail d-block d-sm-none\"\r\n                  alt={product.name}\r\n                  src={product.imageUrl}\r\n                />\r\n              </div>\r\n              <div>\r\n                <h4 className=\"font-weight-bold\">{product.name}</h4>\r\n                <p>{product.description}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer px-3 px-md-2\">\r\n          <div className=\"d-flex mb-3\">\r\n            <CategoryBadges product={product} />\r\n          </div>\r\n          <div className=\"d-flex flex-md-wrap align-items-center justify-content-between\">\r\n            <div className=\"h5 font-weight-bold mb-0 mx-1\">\r\n              {getCurrencyFormat(product.price)}\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => dispatch(CartAction.ADD, { product, quantity: 1 })}\r\n            >\r\n              Add to cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// utils\r\nimport { getCurrencyFormat } from \"../../lib/utils\";\r\n\r\ninterface CartItemProps {\r\n  item: CartItem;\r\n  editable: boolean;\r\n  onChange: HandleChange;\r\n  updateParams: UpdateParams;\r\n  openClass: string;\r\n}\r\n\r\nconst CartItem: React.FC<CartItemProps> = ({\r\n  item,\r\n  editable,\r\n  onChange,\r\n  updateParams,\r\n  openClass\r\n}) => {\r\n  return (\r\n    <>\r\n      <li\r\n        className={`cart-item list-group-item d-flex align-items-center px-3 ${openClass}`}\r\n      >\r\n        <div className=\"mr-3\">\r\n          <img\r\n            className=\"thumbnail\"\r\n            src={item.product.imageUrl}\r\n            alt={item.product.name}\r\n          />\r\n        </div>\r\n        <div className=\"flex-grow-1 d-flex flex-column h5 mb-0\">\r\n          <div className=\"mb-2\">{item.product.name}</div>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div\r\n              className={editable ? \"bg-secondary text-info rounded-pill\" : \"\"}\r\n            >\r\n              <div className=\"d-flex align-items-center justify-content-start\">\r\n                {(editable && (\r\n                  <div\r\n                    className=\"update decrease p-1\"\r\n                    onClick={e =>\r\n                      onChange(e, {\r\n                        ...updateParams,\r\n                        item,\r\n                        quantity: item.quantity - 1\r\n                      })\r\n                    }\r\n                  >\r\n                    <FontAwesomeIcon icon=\"minus-circle\" />\r\n                  </div>\r\n                )) || <small className=\"text-lighter\">qty :</small>}\r\n                <div className=\"font-weight-bold\">\r\n                  <input\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                      e.target.value &&\r\n                      onChange(e, {\r\n                        ...updateParams,\r\n                        item,\r\n                        quantity: parseInt(e.target.value)\r\n                      })\r\n                    }\r\n                    inputMode=\"numeric\"\r\n                    pattern=\"[0-9]*\"\r\n                    type=\"text\"\r\n                    name=\"quantity\"\r\n                    value={item.quantity}\r\n                    disabled={!editable}\r\n                  />\r\n                </div>\r\n                {editable && (\r\n                  <div\r\n                    className=\"update increase p-1\"\r\n                    onClick={e =>\r\n                      onChange(e, {\r\n                        ...updateParams,\r\n                        item,\r\n                        quantity: item.quantity + 1\r\n                      })\r\n                    }\r\n                  >\r\n                    <FontAwesomeIcon icon=\"plus-circle\" />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className={editable ? \"w-25 text-right\" : \"text-right\"}>\r\n              {getCurrencyFormat(item.product.price * item.quantity)}\r\n            </div>\r\n            {editable && (\r\n              <div className=\"w-25\">\r\n                <div\r\n                  className=\"update ml-auto p-1\"\r\n                  onClick={e =>\r\n                    onChange(e, { ...updateParams, item, quantity: 0 })\r\n                  }\r\n                >\r\n                  <FontAwesomeIcon icon={[\"far\", \"trash-alt\"]} size=\"sm\" />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useContext } from \"react\";\r\n\r\n// context\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\nimport { CartAction } from \"../hooks/useCart\";\r\n\r\n// components\r\nimport CartItem from \"../common/CartItem\";\r\n\r\ninterface CartItemsProps {\r\n  openClass: string;\r\n}\r\n\r\nconst CartItems: React.FC<CartItemsProps> = ({ openClass }) => {\r\n  const { cart, dispatch } = useContext(OrderContext);\r\n\r\n  const onChangeItem: HandleChange = (e, params) => {\r\n    const { item, quantity } = params;\r\n    if (item && quantity !== undefined)\r\n      dispatch(CartAction.UPDATE, { product: item.product, quantity });\r\n  };\r\n\r\n  const result = [];\r\n  for (let [product, quantity] of cart.items.entries()) {\r\n    result.push(\r\n      <CartItem\r\n        key={product.id}\r\n        item={{ product, quantity }}\r\n        editable={true}\r\n        onChange={onChangeItem}\r\n        updateParams={{}}\r\n        openClass={openClass}\r\n      />\r\n    );\r\n  }\r\n  return <>{result}</>;\r\n};\r\n\r\nexport default CartItems;\r\n","import React from \"react\";\r\n\r\n// css\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n// components\r\nimport CartItem from \"./CartItem\";\r\n\r\ninterface ModalDialogueProps {\r\n  props: ModalProps;\r\n  onConfirm: HandleClick;\r\n  onCancel: () => void;\r\n}\r\nconst ModalDialogue: React.FC<ModalDialogueProps> = ({\r\n  props,\r\n  onConfirm,\r\n  onCancel\r\n}) => {\r\n  return (\r\n    <Modal show={props.show} onHide={onCancel} centered>\r\n      <Modal.Header closeButton className=\"border-0 pb-0\">\r\n        <Modal.Title>{props.caption}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"pt-0\">\r\n        <div className=\"cart my-3\">\r\n          <ul className=\"list-group\">\r\n            {props.item && (\r\n              <CartItem\r\n                item={props.item}\r\n                editable={false}\r\n                onChange={() => {}}\r\n                updateParams={{}}\r\n                openClass=\"open\"\r\n              />\r\n            )}\r\n          </ul>\r\n        </div>\r\n        <div className=\"d-flex align-items-center justify-content-end\">\r\n          <Button variant=\"outline-info\" onClick={onCancel}>\r\n            {props.labelCancel}\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={onConfirm} className=\"ml-3\">\r\n            {props.labelConfirm}\r\n          </Button>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalDialogue;\r\n","import React, { useRef, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// context\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\n\r\n//components\r\nimport CartItems from \"./CartItems\";\r\n\r\n// utils\r\nimport { getCurrencyFormat } from \"../../lib/utils\";\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { CartAction } from \"../hooks/useCart\";\r\nimport ModalDialogue from \"../common/ModalDialogue\";\r\n\r\ninterface CartProps {\r\n  atCheckout: boolean;\r\n}\r\n\r\nconst Cart: React.FC<CartProps> = ({ atCheckout }) => {\r\n  const { cart, dispatch } = useContext(OrderContext);\r\n  const cartRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToCart = () => {\r\n    if (cart.open && cartRef && cartRef.current)\r\n      cartRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToCart, [cart.open]);\r\n\r\n  const classOpen = () => {\r\n    return cart.open || atCheckout ? \"open\" : \"\";\r\n  };\r\n\r\n  const classBlink = () => {\r\n    return cart.blink ? \"blink\" : \"\";\r\n  };\r\n\r\n  const classHeader = () => {\r\n    return (\r\n      !cart.open &&\r\n      (cart.items.size ? \" d-none d-sm-none\" : \"\") +\r\n        (cart.items.size > 2 ? \" d-md-none\" : \" d-md-block\") +\r\n        (cart.items.size > 3 ? \" d-lg-none\" : \" d-lg-block\") +\r\n        (cart.items.size > 6 ? \" d-xl-none\" : \" d-xl-block\")\r\n    );\r\n  };\r\n\r\n  const Thumbnails: React.FC = () => {\r\n    const result = [];\r\n    for (let [product, quantity] of cart.items.entries()) {\r\n      result.push(\r\n        <div\r\n          key={product.id}\r\n          className=\"py-1 py-0-sm d-flex align-items-center\"\r\n        >\r\n          <div>\r\n            <img\r\n              className=\"thumbnail\"\r\n              src={product.imageUrl}\r\n              alt={product.name}\r\n            />\r\n          </div>\r\n          <div className={`label badge badge-pill`}>{quantity}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"d-flex flex-wrap\">{result}</div>;\r\n  };\r\n\r\n  const Header: React.FC = () => {\r\n    return (\r\n      <>\r\n        <div className=\"d-flex m-3 py-1 align-items-center flex-nowrap h5\">\r\n          <div>\r\n            <FontAwesomeIcon icon=\"shopping-cart\" />\r\n          </div>\r\n          <div className={`ml-2 font-weight-bold ${classHeader()}`}>\r\n            Shopping cart\r\n          </div>\r\n        </div>\r\n        <div className=\"ml-4\">\r\n          <Thumbnails />\r\n        </div>\r\n        <div className=\"ml-auto mr-4\">\r\n          <FontAwesomeIcon icon=\"angle-up\" size=\"lg\" />\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const Footer: React.FC = () => {\r\n    return (\r\n      <>\r\n        {cart.articles ? (\r\n          <li\r\n            className={`cart-item cart-footer list-group-item d-flex justify-content-between align-items-center flex-wrap p-0\r\n        ${classOpen()}`}\r\n          >\r\n            <div className=\"d-flex h5 ml-auto m-3\">\r\n              <div className=\"font-weight-light mr-3\">Total:</div>\r\n              <div className=\"font-weight-bold\">\r\n                {getCurrencyFormat(cart.subTotal)}\r\n              </div>\r\n            </div>\r\n            <div className=\"ml-auto m-2\">\r\n              {!atCheckout && (\r\n                <Link to={\"/checkout\"} className=\"btn btn-primary\">\r\n                  Check Out\r\n                  <FontAwesomeIcon\r\n                    icon=\"angle-right\"\r\n                    size=\"lg\"\r\n                    className=\"ml-2\"\r\n                  />\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ) : undefined}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cart-offset\" ref={cartRef}></div>\r\n      <div className=\"cart\" id=\"cart\">\r\n        <ul className={`list-group ${cart.open ? \"\" : \"mx-3 m-md-3\"}`}>\r\n          {\r\n            !atCheckout && (\r\n              <li\r\n                onClick={() => dispatch(CartAction.TOGGLE)}\r\n                className={`cart-header toggle p-0 list-group-item d-flex align-items-center\r\n          ${classOpen()} ${classBlink()}`}\r\n              >\r\n                <Header />\r\n              </li>\r\n            ) // om jag lägger <li> i <Header /> funkar inte .toggle { transition:... }\r\n          }\r\n          <CartItems openClass={classOpen()} />\r\n          <Footer />\r\n        </ul>\r\n      </div>\r\n      <ModalDialogue\r\n        onConfirm={() => dispatch(CartAction.DELETE)}\r\n        onCancel={() => dispatch(CartAction.HIDE_MODAL)}\r\n        props={cart.modal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useEffect, useRef, useContext } from \"react\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// context\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\n\r\n//components\r\nimport ProductCard from \"./ProductCard\";\r\nimport Cart from \"./Cart\";\r\nimport { CartAction } from \"../hooks/useCart\";\r\n\r\nconst NEWS_CATEGORY = -1;\r\n\r\nconst ProductsPage: React.FC = () => {\r\n  const { categories, products } = useContext(ProductContext);\r\n  const { cart, dispatch } = useContext(OrderContext);\r\n\r\n  const { slug } = useParams();\r\n  const currentCategory: ProductCategory | undefined = slug\r\n    ? categories.find(category => category.slug === slug)\r\n    : categories.find(category => category.id === NEWS_CATEGORY);\r\n\r\n  const usePrevious = <T extends {} | undefined>(value: T) => {\r\n    const ref = useRef<T>();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  };\r\n  const previousSlug = usePrevious(slug);\r\n\r\n  useEffect(() => {\r\n    if (previousSlug !== slug && cart.open) dispatch(CartAction.TOGGLE);\r\n  }, [previousSlug, slug, cart.open, dispatch]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [slug]);\r\n\r\n  const getProductsFromCategory = (category: ProductCategory) => {\r\n    return products.filter(product => {\r\n      return product.productCategory.find(\r\n        cat => cat.categoryId === category.id\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!currentCategory && <Redirect to=\"/not-found\" />}\r\n      {!slug && currentCategory && <Redirect to={`/${currentCategory.slug}`} />}\r\n      <Row xs={1} sm={2} md={3} lg={4} xl={5}>\r\n        {currentCategory &&\r\n          getProductsFromCategory(currentCategory).map(product => (\r\n            <ProductCard key={product.id} product={product} />\r\n          ))}\r\n      </Row>\r\n      <div className={`${cart.open ? \"\" : \"fixed-bottom\"}`}>\r\n        <Row>\r\n          <Col sm={8} lg={6} className=\"px-1 px-sm-3\">\r\n            <Cart atCheckout={false} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsPage;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// video\r\n// import video from \"../media/404.mkv\";\r\n// import poster from \"../media/404.jpg\";\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\ninterface NotFoundProps {\r\n  video: Video;\r\n  hasButton: boolean;\r\n  caption: string;\r\n}\r\n\r\nconst NotFound: React.FC<NotFoundProps> = ({ video, hasButton, caption }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"video\">\r\n      <div className=\"overlay w-100\">\r\n        <video autoPlay loop muted playsInline poster={video.poster}>\r\n          <source src={video.url} type=\"video/mp4\" />\r\n        </video>\r\n        <div className=\"description d-flex justify-content-around\">\r\n          {hasButton && (\r\n            <div className=\"align-self-center text-nowrap\">\r\n              <button className=\"btn\" onClick={history.goBack}>\r\n                <FontAwesomeIcon icon=\"angle-left\" size=\"sm\" className=\"mr-2\" />\r\n                back\r\n              </button>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <h1>{caption}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useContext } from \"react\";\r\n\r\n// context\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\ninterface SelectCompanyProps {\r\n  selected?: number;\r\n  onChange?: HandleChange;\r\n  errors?: OrderErrors;\r\n}\r\n\r\nconst SelectCompany: React.FC<SelectCompanyProps> = ({\r\n  selected = 0,\r\n  onChange,\r\n  errors\r\n}) => {\r\n  const { companies } = useContext(OrderContext);\r\n  return (\r\n    <Form.Group controlId=\"formGroupCompany\">\r\n      <Form.Label>company</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        size=\"lg\"\r\n        name=\"companyId\"\r\n        defaultValue={selected}\r\n        onChange={onChange}\r\n        isInvalid={!!errors?.companyId}\r\n      >\r\n        {companies.map(company => (\r\n          <option value={company.id ? company.id : \"\"} key={company.id}>\r\n            {company.name}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors?.companyId}\r\n      </Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default SelectCompany;\r\n","import React from \"react\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\n\r\n// icon\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { IconName } from \"@fortawesome/fontawesome-svg-core\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst PAY_METHODS = [\r\n  { icon: \"cc-visa\" as IconName, name: \"Visa\" },\r\n  { icon: \"cc-mastercard\" as IconName, name: \"MasterCard\" },\r\n  { icon: \"cc-amex\" as IconName, name: \"Amex\" }\r\n];\r\n\r\ninterface TogglePayMethodProps {\r\n  order: Order;\r\n  setOrder: React.Dispatch<React.SetStateAction<Order>>;\r\n  errors: OrderErrors;\r\n  setErrors: React.Dispatch<React.SetStateAction<OrderErrors>>;\r\n}\r\n\r\nconst TogglePayMethod: React.FC<TogglePayMethodProps> = ({\r\n  order,\r\n  setOrder,\r\n  errors,\r\n  setErrors\r\n}) => {\r\n  const onChange: HandleChange = value => {\r\n    setErrors({ ...errors, paymentMethod: \"\" });\r\n    setOrder({ ...order, paymentMethod: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <Form.Label>payment method</Form.Label>\r\n      <ToggleButtonGroup\r\n        className={`d-flex flex-wrap rounded ${\r\n          errors.paymentMethod\r\n            ? \"border border-danger is-invalid\"\r\n            : \"border border-dark\"\r\n        }`}\r\n        type=\"radio\"\r\n        name=\"options\"\r\n        value={order.paymentMethod}\r\n        onChange={onChange}\r\n      >\r\n        {PAY_METHODS.map(method => (\r\n          <ToggleButton\r\n            key={method.icon}\r\n            value={method.name}\r\n            variant={order.paymentMethod === method.name ? \"secondary\" : \"info\"}\r\n          >\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n              <FontAwesomeIcon\r\n                icon={[\"fab\", method.icon]}\r\n                size=\"2x\"\r\n                key={method.icon}\r\n                className=\"mr-2\"\r\n              />\r\n              <span className=\"d-none d-sm-inline font-weight-lighter\">\r\n                {method.name}\r\n              </span>\r\n            </div>\r\n          </ToggleButton>\r\n        ))}\r\n      </ToggleButtonGroup>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors.paymentMethod}\r\n      </Form.Control.Feedback>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TogglePayMethod;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// components\r\nimport SelectCompany from \"../common/SelectCompany\";\r\nimport TogglePayMethod from \"./TogglePayMethod\";\r\n\r\ninterface CheckoutFormProps {\r\n  order: Order;\r\n  setOrder: React.Dispatch<React.SetStateAction<Order>>;\r\n  errors: OrderErrors;\r\n  setErrors: React.Dispatch<React.SetStateAction<OrderErrors>>;\r\n  isValidEmail: () => boolean;\r\n  isSaving: boolean;\r\n  onSubmit: HandleSubmit;\r\n}\r\n\r\nconst CheckoutForm: React.FC<CheckoutFormProps> = ({\r\n  order,\r\n  setOrder,\r\n  errors,\r\n  setErrors,\r\n  isValidEmail,\r\n  isSaving,\r\n  onSubmit\r\n}) => {\r\n  const handleChange: HandleChange = e => {\r\n    if (e.target.name) {\r\n      setErrors({ ...errors, [e.target.name]: \"\" });\r\n      const value = { [e.target.name]: e.target.value };\r\n      setOrder({ ...order, ...value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} noValidate className=\"mt-4\">\r\n      <SelectCompany\r\n        selected={order.companyId}\r\n        onChange={handleChange}\r\n        errors={errors}\r\n      />\r\n      <Form.Group controlId=\"formGroupEmail\">\r\n        <Form.Label>e-mail address</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          name=\"createdBy\"\r\n          placeholder=\"e-mail\"\r\n          size=\"lg\"\r\n          value={order.createdBy}\r\n          onChange={handleChange}\r\n          isValid={isValidEmail()}\r\n          isInvalid={!!errors.createdBy}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.createdBy}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <TogglePayMethod\r\n        order={order}\r\n        setOrder={setOrder}\r\n        errors={errors}\r\n        setErrors={setErrors}\r\n      />\r\n      <div className=\"text-right mt-4\">\r\n        <button type=\"submit\" className=\"w-50 btn btn-primary mt-4 mt-md-0\">\r\n          {isSaving ? (\r\n            <FontAwesomeIcon icon=\"spinner\" pulse />\r\n          ) : (\r\n            <>\r\n              Place order\r\n              <FontAwesomeIcon icon=\"angle-right\" size=\"lg\" className=\"ml-2\" />\r\n            </>\r\n          )}\r\n        </button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// api\r\nimport { save } from \"../../lib/api\";\r\n\r\n// context\r\nimport { errorMessage, OrderContext } from \"../contexts/OrderContext\";\r\n\r\n// components\r\nimport Cart from \"./Cart\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport { CartAction } from \"../hooks/useCart\";\r\n\r\ninterface CheckoutProps {\r\n  order: Order;\r\n  setOrder: React.Dispatch<React.SetStateAction<Order>>;\r\n}\r\n\r\nconst Checkout: React.FC<CheckoutProps> = ({ order, setOrder }) => {\r\n  const { cart, dispatch } = useContext(OrderContext);\r\n  const [isSaving, setSaving] = useState<boolean>(false);\r\n  const [errors, setErrors] = useState<OrderErrors>({\r\n    companyId: \"\",\r\n    createdBy: \"\",\r\n    paymentMethod: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (cart.open) dispatch(CartAction.TOGGLE);\r\n  }, [cart.open, dispatch]);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!cart.subTotal) history.push(\"/\");\r\n  }, [history, cart]);\r\n\r\n  const handleSubmit: HandleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!isValidForm()) return;\r\n\r\n    delete order.id; // important!\r\n    const newOrder = {\r\n      ...order,\r\n      created: new Date().toISOString(),\r\n      totalPrice: cart.subTotal,\r\n      orderRows: getOrderRows(order)\r\n    };\r\n\r\n    submitOrder(newOrder);\r\n  };\r\n\r\n  const isValidForm = () => {\r\n    const err: OrderErrors = {};\r\n    if (!isValidEmail()) err.createdBy = errorMessage.createdBy;\r\n    if (!order.companyId) err.companyId = errorMessage.companyId;\r\n    if (!order.paymentMethod) err.paymentMethod = errorMessage.paymentMethod;\r\n    setErrors(err);\r\n    return Object.keys(err).length === 0;\r\n  };\r\n\r\n  const isValidEmail = () => {\r\n    const format = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return order.createdBy.match(format) ? true : false;\r\n  };\r\n\r\n  const submitOrder = async (createdOrder: Order) => {\r\n    setSaving(true);\r\n    console.log(\"createdOrder:\", JSON.stringify(createdOrder));\r\n    const response = await save<Order>(createdOrder, \"orders\");\r\n    console.log(\"response:\", response);\r\n\r\n    if (response.status !== 201) {\r\n      setSaving(false);\r\n      if (response.data && response.data.errors) {\r\n        const messages: string[] = response.data.errors.map(\r\n          (error: any) => error.msg\r\n        );\r\n        console.error(\"ERROR!\", messages.join(\"\\n\"));\r\n        setErrors({ ...errors, response: messages.join(\"\\n\") });\r\n      } else {\r\n        const message = `${response.status} : ${response.statusText}`;\r\n        setErrors({ ...errors, response: message });\r\n      }\r\n    } else {\r\n      const savedOrder: Order = response.data;\r\n      console.log(\"savedOrder:\", JSON.stringify(savedOrder));\r\n      setOrder({ ...savedOrder });\r\n      history.push(\"/confirmation\");\r\n    }\r\n  };\r\n\r\n  const getOrderRows = (_order: Order) => {\r\n    const result = [];\r\n    for (let [product, quantity] of cart.items.entries()) {\r\n      const orderRow: OrderRow = {\r\n        productId: product.id,\r\n        orderId: _order?.id,\r\n        amount: quantity\r\n      };\r\n      result.push(orderRow);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row xs={1} md={2}>\r\n        <Col className=\"mt-2 p-0\">\r\n          <Cart atCheckout={true} />\r\n        </Col>\r\n        <Col>\r\n          <CheckoutForm\r\n            order={order}\r\n            setOrder={setOrder}\r\n            errors={errors}\r\n            setErrors={setErrors}\r\n            isValidEmail={isValidEmail}\r\n            isSaving={isSaving}\r\n            onSubmit={handleSubmit}\r\n          />\r\n          {!!errors && !!errors.response && (\r\n            <div className=\"alert alert-danger mt-4 mb-0\">\r\n              {errors.response}\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React, { useContext } from \"react\";\r\n\r\n// context\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\n\r\n// components\r\nimport CartItem from \"./CartItem\";\r\n\r\ninterface OrderRowsProps {\r\n  items?: CartItem[];\r\n  editable: boolean;\r\n  onChange: HandleChange;\r\n  updateParams: UpdateParams;\r\n  openClass: string;\r\n}\r\n\r\nconst OrderRows: React.FC<OrderRowsProps> = ({\r\n  items,\r\n  editable,\r\n  onChange,\r\n  updateParams,\r\n  openClass\r\n}) => {\r\n  const { products } = useContext(ProductContext);\r\n\r\n  const toCartItems = (orderRows: OrderRow[] | undefined) => {\r\n    if (!orderRows) return [];\r\n    return orderRows.map(orderRow => {\r\n      const product: Product | undefined = products.find(\r\n        product => product.id === orderRow.productId\r\n      );\r\n      return { product, quantity: orderRow.amount } as CartItem;\r\n    });\r\n  };\r\n\r\n  if (!items && updateParams?.order)\r\n    items = toCartItems(updateParams.order?.orderRows);\r\n  return (\r\n    <>\r\n      {items?.map(item => {\r\n        return (\r\n          !!item.product && (\r\n            <CartItem\r\n              key={item.product.id}\r\n              item={item}\r\n              editable={editable}\r\n              onChange={onChange}\r\n              updateParams={{ ...updateParams, items }}\r\n              openClass={openClass}\r\n            />\r\n          )\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderRows;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { getCurrencyFormat, getOrderIdFormat } from \"../../lib/utils\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// context\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\n\r\n// components\r\nimport { CartAction } from \"../hooks/useCart\";\r\nimport OrderRows from \"../common/OrderRows\";\r\n\r\ninterface ConfirmationProps {\r\n  order: Order;\r\n}\r\n\r\nconst Confirmation: React.FC<ConfirmationProps> = ({ order }) => {\r\n  const { companies, cart, dispatch } = useContext(OrderContext);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const validateOrder = () => {\r\n      let message = \"\";\r\n      if (order.orderRows) {\r\n        if (order.orderRows?.length !== cart.items.size)\r\n          message = \"Order contains wrong number of items.\";\r\n        let counter = 0;\r\n        for (let [product, quantity] of cart.items.entries()) {\r\n          const orderRow = order.orderRows[counter];\r\n          if (\r\n            !(product.id === orderRow.productId && quantity === orderRow.amount)\r\n          )\r\n            message = `Order contains wrong quantity of \"${product.name}\": ${orderRow.amount} should be ${quantity}!`;\r\n          counter++;\r\n        }\r\n      } else message = \"Order is empty!\";\r\n\r\n      if (!message) {\r\n        dispatch(CartAction.RESET);\r\n        return \"\";\r\n      } else setError(message);\r\n    };\r\n    if (cart.items.size) validateOrder();\r\n  }, [cart.items, dispatch, order.orderRows]);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <h1 className=\"m-4 text-secondary\">Order confirmation</h1>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12} lg={6} className=\"mb-4\">\r\n          <div className=\"cart open\">\r\n            <ul className=\"list-group open\">\r\n              <OrderRows\r\n                editable={false}\r\n                onChange={() => {}}\r\n                updateParams={{ order }}\r\n                openClass=\"open\"\r\n              />\r\n              <li className=\"cart-item cart-footer h5 list-group-item d-flex justify-content-end open\">\r\n                <div className=\"font-weight-bold d-flex m-0\">\r\n                  <div className=\"font-weight-light mr-3\">Total:</div>\r\n                  <div>{getCurrencyFormat(order.totalPrice)}</div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {!!error && (\r\n            <div className=\"alert alert-danger mt-4 mb-0\">{error}</div>\r\n          )}\r\n        </Col>\r\n        <Col>\r\n          <div className=\"cart open\">\r\n            <ul className=\"list-group open m-0\">\r\n              <li className=\"cart-item list-group-item d-flex align-items-center justify-content-between open\">\r\n                <div className=\"font-weight-light\">order #</div>\r\n                <div>{getOrderIdFormat(order.id)}</div>\r\n              </li>\r\n              <li className=\"cart-item list-group-item d-flex align-items-center justify-content-between open\">\r\n                <div className=\"font-weight-light\">customer</div>\r\n                <div>\r\n                  {companies.map(company => {\r\n                    return company.id === order.companyId\r\n                      ? company.name\r\n                      : undefined;\r\n                  })}\r\n                </div>\r\n              </li>\r\n              <li className=\"cart-item list-group-item d-flex align-items-center justify-content-between open\">\r\n                <div className=\"font-weight-light\">order created</div>\r\n                <div className=\"text-nowrap\">\r\n                  {new Date(order.created).toLocaleString(\"en-gb\")}\r\n                </div>\r\n              </li>\r\n              <li className=\"cart-item list-group-item d-flex align-items-center justify-content-between open\">\r\n                <div className=\"font-weight-light\">e-mail</div>\r\n                <div>{order.createdBy}</div>\r\n              </li>\r\n              <li className=\"cart-item list-group-item d-flex align-items-center justify-content-between open\">\r\n                <div className=\"font-weight-light\">payment method</div>\r\n                <div>{order.paymentMethod}</div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"d-flex align-items-center vh-100\">\r\n      <div className=\"container text-center text-primary\">\r\n        <FontAwesomeIcon icon=\"spinner\" size=\"10x\" pulse />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState, Dispatch, useContext } from \"react\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport slugify from \"slugify\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// context\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\n\r\n// components\r\nimport ProductCard from \"./ProductCard\";\r\nimport Cart from \"./Cart\";\r\nimport NotFound from \"../common/NotFound\";\r\nimport Loading from \"../common/Loading\";\r\n\r\nconst NO_MOVIES: Product[] = [\r\n  {\r\n    id: -1,\r\n    name: \"No products\",\r\n    description: \"\",\r\n    price: 0,\r\n    imageUrl: \"\",\r\n    year: 0,\r\n    added: new Date(),\r\n    productCategory: []\r\n  }\r\n];\r\n\r\ninterface SearchHitsProps {\r\n  setClearSearch: Dispatch<React.SetStateAction<boolean>>;\r\n  video: Video;\r\n}\r\n\r\nconst SearchHits: React.FC<SearchHitsProps> = ({ setClearSearch, video }) => {\r\n  const { products } = useContext(ProductContext);\r\n  const { cart } = useContext(OrderContext);\r\n  const { slug } = useParams();\r\n  const [foundProducts, setFoundProducts] = useState<Product[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(!foundProducts.length);\r\n  }, [loading, foundProducts]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    if (slug) {\r\n      // const setProductsAsync = async () => {\r\n      //   console.time(\"hits\");\r\n      //   const hits: Product[] = await get<Product>(\r\n      //     `search/?searchText=${slug}`\r\n      //   );\r\n      //   const result: Product[] =\r\n      //     hits && hits.length\r\n      //       ? products.filter(product =>\r\n      //           hits.map(hit => hit.id).includes(product.id)\r\n      //         )\r\n      //       : NO_MOVIES;\r\n      //   console.timeEnd(\"hits\");\r\n\r\n      //   setFoundProducts(result);\r\n      // };\r\n\r\n      const setProducts = () => {\r\n        console.time(\"hits\");\r\n        const slugslug = slugify(slug, { lower: true });\r\n        const result: Product[] = Array.from(\r\n          new Set(\r\n            products.filter(\r\n              product =>\r\n                slugify(product.name, { lower: true }).indexOf(slugslug) >= 0\r\n            )\r\n          )\r\n        );\r\n        console.timeEnd(\"hits\");\r\n\r\n        setFoundProducts(result?.length ? result : NO_MOVIES);\r\n      };\r\n\r\n      setProducts();\r\n    }\r\n  }, [slug, products]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setClearSearch(true);\r\n    };\r\n  }, [setClearSearch]);\r\n\r\n  return (\r\n    <>\r\n      {!slug && <Redirect to=\"/\" />}\r\n      {((!foundProducts || !foundProducts.length) && <Loading />) ||\r\n        (foundProducts === NO_MOVIES && (\r\n          <NotFound video={video} hasButton={false} caption=\"Nope\" />\r\n        )) || (\r\n          <Row xs={1} sm={2} md={3} lg={4} xl={5}>\r\n            {foundProducts.map(product => (\r\n              <ProductCard key={product.id} product={product} />\r\n            ))}\r\n          </Row>\r\n        )}\r\n      <div className={`${cart.open ? \"\" : \"fixed-bottom\"}`}>\r\n        <Row>\r\n          <Col sm={8} lg={6} className=\"px-1 px-sm-3\">\r\n            <Cart atCheckout={false} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchHits;\r\n","import React from \"react\";\r\nimport { APP_INFO } from \"../../lib/utils\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div>\r\n        <div>&copy; 2020 Christofer Laurin</div>\r\n        <div>\r\n          {`${APP_INFO.name} ${APP_INFO.version} ${process.env.NODE_ENV}`}\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { createContext } from \"react\";\r\n\r\ninterface IAdminContext {\r\n  orderStatusArray: string[];\r\n  orderStatusColors: string[];\r\n  statusFilter: number;\r\n  setStatusFilter: React.Dispatch<React.SetStateAction<number>>;\r\n  statusMatches: number[];\r\n  setStatusMatches: React.Dispatch<React.SetStateAction<number[]>>;\r\n  changeOrderStatus: (status: number, order: Order) => void;\r\n  updateItem: UpdateItem;\r\n  saveOrder: (order: Order) => Promise<Order>;\r\n  deleteOrder: (order: Order) => Promise<Order>;\r\n}\r\n\r\nexport const orderStatusArray = [\r\n  \"Confirmed\",\r\n  \"Completed\",\r\n  \"Pending\",\r\n  \"Shipped\",\r\n  \"Received\",\r\n  \"Denied\",\r\n  \"Cancelled\",\r\n  \"Refunded\"\r\n];\r\n\r\nexport const orderStatusColors = [\r\n  \"#395f97\",\r\n  \"#327694\",\r\n  \"#2d7b64\",\r\n  \"#5d8039\",\r\n  \"#ac833a\",\r\n  \"#97527a\",\r\n  \"#95373c\",\r\n  \"#6e5c9d\"\r\n];\r\n\r\nconst statusFilter = 0;\r\nconst setStatusFilter = () => {};\r\nconst statusMatches: number[] = [];\r\nconst setStatusMatches = () => {};\r\nconst changeOrderStatus: (status: number, order: Order) => void = () => {};\r\nconst updateItem: UpdateItem = () => {};\r\nconst saveOrder: (order: Order) => Promise<Order> = async order =>\r\n  new Promise(() => {});\r\nconst deleteOrder: (order: Order) => Promise<Order> = async order =>\r\n  new Promise(() => {});\r\n\r\nexport const AdminContext = createContext<IAdminContext>({\r\n  orderStatusArray,\r\n  orderStatusColors,\r\n  statusFilter,\r\n  setStatusFilter,\r\n  statusMatches,\r\n  setStatusMatches,\r\n  changeOrderStatus,\r\n  updateItem,\r\n  saveOrder,\r\n  deleteOrder\r\n});\r\n","import React, { ChangeEvent, useContext } from \"react\";\r\nimport { AdminContext } from \"../contexts/AdminContext\";\r\n\r\ninterface SelectOrderStatusProps {\r\n  order: Order;\r\n  selected?: number;\r\n  onChange: HandleChange;\r\n}\r\n\r\nconst SelectOrderStatus: React.FC<SelectOrderStatusProps> = ({\r\n  order,\r\n  selected = 0,\r\n  onChange\r\n}) => {\r\n  const { orderStatusArray, orderStatusColors } = useContext(AdminContext);\r\n\r\n  const statusColor =\r\n    selected !== undefined\r\n      ? orderStatusColors[selected]\r\n      : order?.status !== undefined\r\n      ? orderStatusColors[order.status]\r\n      : \"inherit\";\r\n\r\n  return (\r\n    <select\r\n      name=\"orderStatus\"\r\n      className=\"w-100 badge-select text-white\"\r\n      style={{ color: statusColor, backgroundColor: \"transparent\" }}\r\n      defaultValue={selected}\r\n      onChange={(e: ChangeEvent<HTMLSelectElement>) => onChange(e, order)}\r\n    >\r\n      {orderStatusArray.map((status, index) => (\r\n        <option\r\n          value={index}\r\n          key={status}\r\n          style={{ color: orderStatusColors[index] }}\r\n        >\r\n          {status}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SelectOrderStatus;\r\n","import React from \"react\";\r\n\r\n// icons\r\nimport {\r\n  FontAwesomeIcon,\r\n  FontAwesomeIconProps\r\n} from \"@fortawesome/react-fontawesome\";\r\nimport { IconName } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst PAY_METHODS = [\r\n  { icon: \"cc-visa\" as IconName, name: \"Visa\" },\r\n  { icon: \"cc-mastercard\" as IconName, name: \"MasterCard\" },\r\n  { icon: \"cc-amex\" as IconName, name: \"Amex\" }\r\n];\r\n\r\ninterface PaymentIconProps {\r\n  name: string;\r\n  size: FontAwesomeIconProps[\"size\"];\r\n}\r\nconst PaymentIcon: React.FC<PaymentIconProps> = ({ name, size }) => {\r\n  const icon = PAY_METHODS.find(\r\n    i => i.name.toLowerCase() === name.toLowerCase()\r\n  );\r\n  if (icon) return <FontAwesomeIcon icon={[\"fab\", icon.icon]} size={size} />;\r\n  return <></>;\r\n};\r\n\r\nexport default PaymentIcon;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { getCurrencyFormat, getOrderIdFormat } from \"../../lib/utils\";\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// context\r\nimport { AdminContext } from \"../contexts/AdminContext\";\r\n\r\n// hooks\r\nimport { SaveState, useSaveState } from \"./hooks/useSaveState\";\r\n\r\n// components\r\nimport OrderRows from \"../common/OrderRows\";\r\nimport SelectOrderStatus from \"./SelectOrderStatus\";\r\nimport PaymentIcon from \"./PaymentIcon\";\r\n\r\ninterface OrderProps {\r\n  order: Order;\r\n}\r\n\r\nconst Order: React.FC<OrderProps> = ({ order }) => {\r\n  const {\r\n    orderStatusColors,\r\n    statusFilter,\r\n    changeOrderStatus,\r\n    updateItem,\r\n    saveOrder,\r\n    deleteOrder\r\n  } = useContext(AdminContext);\r\n\r\n  const [openClass, setOpenClass] = useState<string>(\"\");\r\n  const [selectedStatus, setSelectedStatus] = useState<number | undefined>(\r\n    order.status\r\n  );\r\n\r\n  const [\r\n    { isDirty, isSaving, isSaved, isDeleting, isDeleted },\r\n    setSaveState\r\n  ] = useSaveState();\r\n\r\n  const isVisible = () => {\r\n    return statusFilter === -1 || order.status === statusFilter;\r\n  };\r\n\r\n  const onChangeStatus: HandleChange = e => {\r\n    setSaveState(SaveState.DIRTY);\r\n    setSelectedStatus(parseInt(e.target.value));\r\n    if (!openClass) toggleOpen();\r\n  };\r\n\r\n  const onChangeItem: HandleChange = (e, params) => {\r\n    setSaveState(SaveState.DIRTY);\r\n    updateItem(params);\r\n  };\r\n\r\n  const onSubmit: HandleClick = async (order: Order) => {\r\n    setSaveState(SaveState.SAVING);\r\n    if (selectedStatus && selectedStatus !== order.status) {\r\n      changeOrderStatus(selectedStatus, order);\r\n      toggleOpen();\r\n    }\r\n    const response = await saveOrder(order);\r\n    if (response && response.status && [200, 204].includes(response.status)) {\r\n      setSaveState(SaveState.SAVED);\r\n    }\r\n  };\r\n\r\n  const onDelete: HandleClick = async (order: Order) => {\r\n    setSaveState(SaveState.DELETING);\r\n    deleteOrder(order);\r\n  };\r\n\r\n  const onClick: HandleClick = e => {\r\n    if (!e.target.className.includes(\"badge-select\")) toggleOpen();\r\n  };\r\n\r\n  const toggleOpen = () => {\r\n    setOpenClass(openClass === \"\" ? \"open\" : \"\");\r\n  };\r\n\r\n  const saveButtonClass = () => {\r\n    return isSaved\r\n      ? \"btn-success\"\r\n      : isDirty\r\n      ? \"btn-primary\"\r\n      : \"btn-outline-secondary\";\r\n  };\r\n\r\n  const statusColor =\r\n    selectedStatus !== undefined\r\n      ? orderStatusColors[selectedStatus]\r\n      : order?.status !== undefined\r\n      ? orderStatusColors[order.status]\r\n      : \"inherit\";\r\n\r\n  const Header: React.FC = () => {\r\n    return (\r\n      <>\r\n        <div className=\"w-20\">{getOrderIdFormat(order.id)}</div>\r\n        <div\r\n          className=\"w-30 badge badge-pill\"\r\n          style={{ backgroundColor: statusColor }}\r\n        >\r\n          <SelectOrderStatus\r\n            order={order}\r\n            onChange={onChangeStatus}\r\n            selected={selectedStatus}\r\n          />\r\n        </div>\r\n        <div className=\"w-40 d-flex flex-wrap align-items-center\">\r\n          <div className=\"ml-4\">\r\n            {new Date(order.created).toLocaleDateString(\"en-gb\")}\r\n          </div>\r\n          <div className=\"ml-auto\">{getCurrencyFormat(order.totalPrice)}</div>\r\n        </div>\r\n        <div className=\"ml-auto\">\r\n          <FontAwesomeIcon icon=\"angle-up\" />\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const Footer: React.FC = () => {\r\n    return (\r\n      <li\r\n        className={`cart-item cart-footer list-group-item d-flex justify-content-between align-items-center flex-wrap p-2 pl-3 m-0 ${openClass}`}\r\n      >\r\n        <div>\r\n          <PaymentIcon name={order.paymentMethod} size=\"sm\" />\r\n        </div>\r\n        <div className=\"flex-grow-1 overflow-hidden mx-2\">\r\n          <small>{order.createdBy}</small>\r\n        </div>\r\n        <div className=\"w-25\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"w-100 btn btn-danger\"\r\n            onClick={() => onDelete(order)}\r\n          >\r\n            {(isDeleting && <FontAwesomeIcon icon=\"spinner\" pulse />) ||\r\n              (isDeleted && <FontAwesomeIcon icon=\"check\" />) ||\r\n              \"Delete\"}\r\n          </button>\r\n        </div>\r\n        {order.totalPrice ? (\r\n          <div className=\"w-25 ml-2\">\r\n            <button\r\n              type=\"button\"\r\n              className={`w-100 btn ${saveButtonClass()}`}\r\n              disabled={!isDirty}\r\n              onClick={() => onSubmit(order)}\r\n            >\r\n              {(isSaving && <FontAwesomeIcon icon=\"spinner\" pulse />) ||\r\n                (isSaved && <FontAwesomeIcon icon=\"check\" />) ||\r\n                \"Save\"}\r\n            </button>\r\n          </div>\r\n        ) : undefined}\r\n      </li>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isVisible() && (\r\n        <li className=\"list-group-item p-0 mb-3\">\r\n          <ul className=\"list-group\">\r\n            <li\r\n              className={`toggle list-group-item d-flex align-items-center justify-content-between py-2 ${openClass}`}\r\n              onClick={onClick}\r\n            >\r\n              <Header />\r\n            </li>\r\n            <OrderRows\r\n              editable={true}\r\n              onChange={onChangeItem}\r\n              updateParams={{ order }}\r\n              openClass={openClass}\r\n            />\r\n            <Footer />\r\n          </ul>\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useContext } from \"react\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\n\r\n// context\r\nimport { AdminContext } from \"../contexts/AdminContext\";\r\n\r\ninterface ToggleStatusFilter {\r\n  statusFilter: number;\r\n  statusMatches: number[];\r\n  changeStatusFilter: Function;\r\n}\r\n\r\nconst ToggleStatusFilter: React.FC<ToggleStatusFilter> = ({\r\n  statusFilter,\r\n  statusMatches,\r\n  changeStatusFilter\r\n}) => {\r\n  const { orderStatusArray, orderStatusColors } = useContext(AdminContext);\r\n\r\n  const onChange = (selectedStatus: number) => {\r\n    changeStatusFilter(selectedStatus);\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-3 w-100\">\r\n      <ToggleButtonGroup\r\n        className=\"d-flex flex-wrap w-100\"\r\n        type=\"radio\"\r\n        name=\"options\"\r\n        value={statusFilter}\r\n        onChange={onChange}\r\n      >\r\n        <ToggleButton\r\n          value={-1}\r\n          variant={statusFilter === -1 ? \"secondary\" : \"info\"}\r\n          size=\"sm\"\r\n        >\r\n          All\r\n          <span className=\"badge badge-pill bg-dark text-light ml-2\">\r\n            {statusMatches.reduce((a, b) => a + b, 0)}\r\n          </span>\r\n        </ToggleButton>\r\n        {orderStatusArray.map((status, index) =>\r\n          statusMatches[index] ? (\r\n            <ToggleButton\r\n              key={status}\r\n              value={index}\r\n              variant={statusFilter === index ? \"secondary\" : \"info\"}\r\n              size=\"sm\"\r\n            >\r\n              {status}\r\n              <span\r\n                className=\"badge badge-pill text-light ml-2\"\r\n                style={{ backgroundColor: orderStatusColors[index] }}\r\n              >\r\n                {statusMatches[index]}\r\n              </span>\r\n            </ToggleButton>\r\n          ) : undefined\r\n        )}\r\n      </ToggleButtonGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleStatusFilter;\r\n","import React, { useEffect, useContext } from \"react\";\r\n\r\n// context\r\nimport { AdminContext } from \"../contexts/AdminContext\";\r\n\r\n// components\r\nimport Order from \"./Order\";\r\nimport ToggleStatusFilter from \"./ToggleStatusFilter\";\r\n\r\ninterface OrderListProps {\r\n  orders: Order[];\r\n}\r\n\r\nconst OrderList: React.FC<OrderListProps> = ({ orders }) => {\r\n  const { orderStatusArray } = useContext(AdminContext);\r\n  const {\r\n    statusFilter,\r\n    setStatusFilter,\r\n    statusMatches,\r\n    setStatusMatches\r\n  } = useContext(AdminContext);\r\n\r\n  const changeStatusFilter = (selectedStatus: number) => {\r\n    if (selectedStatus < orderStatusArray.length) {\r\n      setStatusFilter(selectedStatus);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let matches: number[] = [];\r\n    for (let i = 0; i < orderStatusArray.length; i++) {\r\n      let counter = 0;\r\n      orders.forEach(order => {\r\n        if (order.status === i) counter++;\r\n      });\r\n      matches.push(counter);\r\n    }\r\n    setStatusMatches(matches);\r\n  }, [orders, orderStatusArray, setStatusMatches]);\r\n\r\n  return (\r\n    <div className=\"cart open\">\r\n      {orders.length ? (\r\n        <ToggleStatusFilter\r\n          statusFilter={statusFilter}\r\n          statusMatches={statusMatches}\r\n          changeStatusFilter={changeStatusFilter}\r\n        />\r\n      ) : undefined}\r\n      <ul className=\"list-group m-0 open\">\r\n        {orders.map(order => (\r\n          <Order key={order.id} order={order} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import React, { useState, useEffect, ChangeEvent, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// api\r\nimport * as API from \"../../lib/api\";\r\n\r\n// context\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\nimport {\r\n  orderStatusArray,\r\n  orderStatusColors,\r\n  AdminContext\r\n} from \"../contexts/AdminContext\";\r\n\r\n// components\r\nimport SelectCompany from \"../common/SelectCompany\";\r\nimport OrderList from \"./OrderList\";\r\nimport Loading from \"../common/Loading\";\r\n\r\nconst OrderAdmin: React.FC = () => {\r\n  const { companies } = useContext(OrderContext);\r\n  const [companyOrders, setCompanyOrders] = useState<Order[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [statusFilter, setStatusFilter] = useState<number>(-1);\r\n  const [statusMatches, setStatusMatches] = useState<number[]>([]);\r\n\r\n  const { slug } = useParams();\r\n  const history = useHistory();\r\n\r\n  const currentCompany: Company | undefined = companies.find(\r\n    company => company.slug === slug?.toLowerCase()\r\n  );\r\n\r\n  const currentCompanyId = currentCompany ? currentCompany.id : 0;\r\n\r\n  useEffect(() => {\r\n    if (!statusMatches[statusFilter]) setStatusFilter(-1);\r\n  }, [statusFilter, statusMatches]);\r\n\r\n  useEffect(() => {\r\n    const setOrdersAsync = async () => {\r\n      const orders: Order[] = await API.get<Order>(\r\n        `orders?companyId=${currentCompanyId}`\r\n      );\r\n      orders.sort((x, y) => (x.created < y.created ? 1 : -1));\r\n      setCompanyOrders(orders);\r\n      setLoading(false);\r\n    };\r\n    if (currentCompanyId) setOrdersAsync();\r\n    else setLoading(false);\r\n  }, [currentCompanyId]);\r\n\r\n  const changeCompany = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const selectedCompanyId = parseInt(e.target.value);\r\n    const selectedCompany = companies.find(\r\n      company => company.id === selectedCompanyId\r\n    );\r\n    const _slug = selectedCompany ? selectedCompany.slug : \"\";\r\n    history.push(`/admin/${_slug}`);\r\n  };\r\n\r\n  const changeOrderStatus = (status: number, order: Order) => {\r\n    order.status = status;\r\n\r\n    const filteredOrders = companyOrders.filter(o => o !== order);\r\n    const updatedOrders = filteredOrders\r\n      .concat([order])\r\n      .sort((x, y) => (x.created < y.created ? 1 : -1));\r\n    setCompanyOrders(updatedOrders);\r\n  };\r\n\r\n  const updateItem: UpdateItem = ({ items, item, order, quantity }) => {\r\n    if (!items || !item || !order) return;\r\n    if (quantity) {\r\n      item.quantity = quantity;\r\n    } else {\r\n      items = items.filter(i => i !== item);\r\n    }\r\n    order.totalPrice = getTotalPrice(items);\r\n    order.orderRows = toOrderRows(items, order.id);\r\n\r\n    updateOrder(order);\r\n  };\r\n\r\n  const saveOrder: (order: Order) => Promise<Order> = async (order: Order) => {\r\n    const response = await API.save<Order>(order, \"orders\", order.id);\r\n    console.log(\"save order:\", JSON.stringify(order));\r\n    console.log(\"response:\", response);\r\n    return response;\r\n  };\r\n\r\n  const updateOrder = (order: Order) => {\r\n    const filteredOrders = companyOrders.filter(o => o !== order);\r\n    const updatedOrders = filteredOrders\r\n      .concat([order])\r\n      .sort((x, y) => (x.created < y.created ? 1 : -1));\r\n\r\n    setCompanyOrders(updatedOrders);\r\n  };\r\n\r\n  const deleteOrder: (order: Order) => Promise<Order> = async (\r\n    order: Order\r\n  ) => {\r\n    if (order.id) {\r\n      const response = await API.del(\"orders\", order.id);\r\n      console.log(\"delete order:\", JSON.stringify(order));\r\n      console.log(\"response:\", response);\r\n      if (response && response.status && response.status === 200) {\r\n        const filteredOrders = companyOrders\r\n          .filter(o => o !== order)\r\n          .sort((x, y) => (x.created < y.created ? 1 : -1));\r\n        setCompanyOrders(filteredOrders);\r\n      }\r\n      return response;\r\n    }\r\n  };\r\n\r\n  const getTotalPrice = (items: CartItem[]) => {\r\n    let result = 0;\r\n    items.map(item => (result += item.product.price * item.quantity));\r\n    return result;\r\n  };\r\n\r\n  const toOrderRows = (items: CartItem[], orderId: number | undefined) => {\r\n    return items.map(item => ({\r\n      productId: item.product.id,\r\n      orderId,\r\n      amount: item.quantity\r\n    })) as OrderRow[];\r\n  };\r\n\r\n  return (\r\n    <AdminContext.Provider\r\n      value={{\r\n        orderStatusArray,\r\n        orderStatusColors,\r\n        statusFilter,\r\n        setStatusFilter,\r\n        statusMatches,\r\n        setStatusMatches,\r\n        changeOrderStatus,\r\n        updateItem,\r\n        saveOrder,\r\n        deleteOrder\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"pt-4 text-secondary\">Order admin</h1>\r\n        </Col>\r\n        <Col xs={12} sm={6} className=\"my-2\">\r\n          <SelectCompany selected={currentCompanyId} onChange={changeCompany} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {loading ? <Loading /> : <OrderList orders={companyOrders} />}\r\n        </Col>\r\n      </Row>\r\n    </AdminContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrderAdmin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport slugify from \"slugify\";\r\n\r\n// css\r\nimport \"../scss/App.scss\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n// icons\r\nimport \"../lib/FontAwesome\";\r\n\r\n// context\r\nimport {\r\n  ProductContext,\r\n  NEWS_CATEGORY,\r\n  NUMBER_OF_ITEMS_IN_NEWS\r\n} from \"./contexts/ProductContext\";\r\n\r\nimport { OrderContext, companies, emptyOrder } from \"./contexts/OrderContext\";\r\n\r\n// hooks\r\nimport { useProducts } from \"./hooks/useProducts\";\r\nimport { useCart } from \"./hooks/useCart\";\r\nimport { useVideo } from \"./hooks/useVideo\";\r\n\r\n// components\r\nimport Navigation from \"./common/Navigation\";\r\nimport ProductsPage from \"./shop/ProductsPage\";\r\nimport NotFound from \"./common/NotFound\";\r\nimport Checkout from \"./shop/Checkout\";\r\nimport Confirmation from \"./shop/Confirmation\";\r\nimport Loading from \"./common/Loading\";\r\nimport SearchHits from \"./shop/SearchHits\";\r\nimport Footer from \"./common/Footer\";\r\nimport OrderAdmin from \"./admin/OrderAdmin\";\r\n\r\nconst App = () => {\r\n  const { categories, products, loading } = useProducts();\r\n  const [cart, dispatch] = useCart(products);\r\n  const [order, setOrder] = useState<Order>(emptyOrder);\r\n\r\n  const [clearSearch, setClearSearch] = useState<boolean>(false);\r\n\r\n  const video = useVideo();\r\n\r\n  useEffect(() => {\r\n    companies.map(\r\n      company => (company.slug = slugify(company.name, { lower: true }))\r\n    );\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <Loading />\r\n  ) : (\r\n    <div id=\"content\">\r\n      <ProductContext.Provider\r\n        value={{\r\n          categories,\r\n          products,\r\n          news: { NEWS_CATEGORY, NUMBER_OF_ITEMS_IN_NEWS }\r\n        }}\r\n      >\r\n        <OrderContext.Provider\r\n          value={{ companies, cart, dispatch, emptyOrder }}\r\n        >\r\n          <Navigation\r\n            clearSearch={clearSearch}\r\n            setClearSearch={setClearSearch}\r\n          />\r\n          <Container fluid as=\"main\">\r\n            <Switch>\r\n              <Route path=\"/checkout\">\r\n                <Checkout order={order} setOrder={setOrder} />\r\n              </Route>\r\n              <Route path=\"/confirmation\">\r\n                <Confirmation order={order} />\r\n              </Route>\r\n              <Route path=\"/not-found\">\r\n                <NotFound video={video} hasButton={true} caption=\"404\" />\r\n              </Route>\r\n              <Route path=\"/admin\" exact>\r\n                <OrderAdmin />\r\n              </Route>\r\n              <Route path=\"/admin/:slug\">\r\n                <OrderAdmin />\r\n              </Route>\r\n              <Route path=\"/search/:slug\">\r\n                <SearchHits setClearSearch={setClearSearch} video={video} />\r\n              </Route>\r\n              <Route path=\"/:slug\">\r\n                <ProductsPage />\r\n              </Route>\r\n              <Redirect from=\"/\" exact to=\"/newly-added\" />\r\n              <Route>\r\n                <Redirect to=\"/not-found\" />\r\n              </Route>\r\n            </Switch>\r\n          </Container>\r\n          <Footer />\r\n        </OrderContext.Provider>\r\n      </ProductContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\nimport slugify from \"slugify\";\r\n\r\n// API\r\nimport * as API from \"../../lib/api\";\r\n\r\n// context\r\nimport {\r\n  NEWS_CATEGORY,\r\n  NUMBER_OF_ITEMS_IN_NEWS\r\n} from \"../contexts/ProductContext\";\r\n\r\nexport const useProducts: () => {\r\n  categories: ProductCategory[];\r\n  products: Product[];\r\n  loading: boolean;\r\n} = () => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [categories, setCategories] = useState<ProductCategory[]>([]);\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(!(categories.length && products.length));\r\n  }, [loading, categories, products]);\r\n\r\n  useEffect(() => {\r\n    const setCategoriesAsync = async () => {\r\n      const c: ProductCategory[] = await API.get<ProductCategory>(\r\n        \"categories\",\r\n        true\r\n      );\r\n      c.unshift(NEWS_CATEGORY);\r\n      c.map(\r\n        category => (category.slug = slugify(category.name, { lower: true }))\r\n      );\r\n      setCategories(c);\r\n    };\r\n    setCategoriesAsync();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setProductsAsync = async () => {\r\n      const _products: Product[] = await API.get<Product>(\"products\", true);\r\n      populateNewsCategory(_products);\r\n      _products.sort((x, y) => (x.name > y.name ? 1 : -1));\r\n      setProducts(_products);\r\n    };\r\n    setProductsAsync();\r\n  }, []);\r\n\r\n  const populateNewsCategory = (_products: Product[]) => {\r\n    _products.sort((x, y) => (x.added < y.added ? 1 : -1));\r\n    _products\r\n      .slice(0, NUMBER_OF_ITEMS_IN_NEWS)\r\n      .map(product =>\r\n        product.productCategory.push({ categoryId: NEWS_CATEGORY.id })\r\n      );\r\n  };\r\n\r\n  return { categories, products, loading };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { APP_INFO } from \"../../lib/utils\";\r\n// api\r\nimport * as API from \"../../lib/api\";\r\n\r\nexport const useVideo: () => { url: string; poster: string } = () => {\r\n  const [video, setVideo] = useState<Video>({ url: \"\", poster: \"\" });\r\n\r\n  useEffect(() => {\r\n    const preloadVideo = async () => {\r\n      const blob = await API.fetchBLOB(`${APP_INFO.root}/media/404.mkv`);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const poster = `${APP_INFO.root}/media/404.jpg`;\r\n      setVideo({ url, poster });\r\n    };\r\n    preloadVideo();\r\n  }, []);\r\n\r\n  return video;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n// components\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}